define(["axios","base64","utils","sysLog"],(function(e,t,n,o){const a="webdata",r={lsRepo:"gitee-repo",lsLoginState:"wyd-login-state",lsFileTree:"file-Tree"};let c,s=localStorage.getItem(r.lsRepo),i={client_id:"f5250ed1c6f0a51423ca06aa4faf5c10d64ce8b411c425256d22fec16a531665",client_secret:"00a0f31357ce04fe3619eab7149d7c1b4daade23677a898b8f14bb647bc25fb3",reposUrlPrefix:"https://gitee.com/api/v5/repos/yanhui1993",repo:s||a},l={loginState:{},fileShaMap:new Map};async function f(t=!1,n=a){return new Promise(((a,s)=>{let l=p(r.lsFileTree,!0,n);!l||t?e.get(`${i.reposUrlPrefix}/${n}/git/trees/master?${c?"access_token="+c:""}&recursive=1`).then((e=>{g(r.lsFileTree,e.tree,n),u(!1,n),a(e.tree),o.addLog(`[${n}]获取仓库文件树`)})).catch((e=>{s(e)})):a(l)}))}async function $(r,s=!1,l=!1,f=a){let $=p(r,!1,f);if(!s&&$){let e=t.decode($);return l?JSON.parse(e):e}let u=await e.get(`${i.reposUrlPrefix}/${f}/contents/${r}?${c?"access_token="+c:""}`);if(!u.content)return n.message(`获取文件内容失败! [${r}]`,"error"),null;g(r,u.content,f);let d=t.decode(u.content);return o.addLog(`[${f}]下载文件 ${r}`),l?JSON.parse(d):d}function g(e,t,n=a){"object"==typeof t?localStorage.setItem(`${n}#${e}`,JSON.stringify(t)):localStorage.setItem(`${n}#${e}`,t)}function p(e,t=!0,n=a){let o=localStorage.getItem(`${n}#${e}`);return o?t?JSON.parse(o):o:null}async function u(e=!1,t){return new Promise(((n,o)=>{if(!t)return null;f(e,t).then((e=>{for(let t of e)l.fileShaMap.set(`${i.repo}#${t.path}`,t.sha);n()})).catch((e=>{o(e)}))}))}return{getFileTree:f,getFileContent:$,newFile:async function(r,s,l=a){if(!r||!s)return null;let f=t.encode(s);return new Promise((t=>{e.post(`${i.reposUrlPrefix}/${l}/contents/${r}`,{access_token:c,content:f,message:`open api new ${window.location.pathname}`}).then((async e=>{n.notify("新增成功！","success"),await u(!0,l),t(e),o.addLog(`[${l}]新增文件 ${r}`)})).catch((e=>{n.notify("新增异常！","error")}))}))},updateFile:async function(r,s,f=a){let $=l.fileShaMap.get(`${f}#${r}`);if(!$)return n.notify(`未匹配文件 ${f}#${r}`,"warning"),null;let p=t.encode(s);return new Promise((t=>{e.put(`${i.reposUrlPrefix}/${f}/contents/${r}`,{access_token:c,content:p,sha:$,message:`open api update ${window.location.pathname}`}).then((async()=>{n.notify(`更新[${r}]成功！`,"success"),g(r,p,f),await u(!0,f),t(),o.addLog(`[${f}]更新文件 ${r}`)})).catch((e=>{n.notify("更新异常！","error")}))}))},deleteFile:async function(t,r=a){let s=l.fileShaMap.get(`${r}#${t}`);return s?new Promise((l=>{e.delete(`${i.reposUrlPrefix}/${r}/contents/${t}`,{params:{access_token:c,sha:s,message:`open api delete ${window.location.pathname}`}}).then((async()=>{n.notify(`删除[${t}]成功！`,"success"),function(e,t=a){localStorage.removeItem(`${t}#${e}`)}(t,r),await u(!0,r),l(),o.addLog(`[${r}]删除文件 ${t}`)})).catch((e=>{}))})):(n.notify(`未匹配文件 ${r}#${t}`,"warning"),null)},initState:async function(){return new Promise((async(e,t)=>{!function(){let e=localStorage.getItem(r.lsLoginState);if(!e)return;l.loginState=JSON.parse(e),c=l.loginState.access_token}(),await $("config/wyd2021.json",!1,!0),u(!1,i.repo).then((()=>{e()})).catch((t=>{n.goLogin(),e()}))}))},clearAllCache:function(){for(let e in localStorage)localStorage.hasOwnProperty(e)&&e&&!e.startsWith("wyd-")&&localStorage.removeItem(e)},setRepo:function(e){i.repo=e,localStorage.setItem(r.lsRepo,e),n.message(`切换数据源[${e}]成功！`)},getRepo:function(){return i.repo},storageKey:r,apiConfig:i}}));