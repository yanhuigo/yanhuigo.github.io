define(["axios","base64","utils"],(function(e,t,n){const a="webdata",o={lsRepo:"gitee-repo",lsLoginState:"login-state",lsFileTree:"file-Tree"};let r,i=localStorage.getItem(o.lsRepo),c={client_id:"f5250ed1c6f0a51423ca06aa4faf5c10d64ce8b411c425256d22fec16a531665",client_secret:"00a0f31357ce04fe3619eab7149d7c1b4daade23677a898b8f14bb647bc25fb3",reposUrlPrefix:"https://gitee.com/api/v5/repos/yanhui1993",repo:i||a},s={loginState:{},fileShaMap:new Map};async function l(t=!1,n=a){return new Promise((a=>{let i=p(o.lsFileTree,!0,n);!i||t?e.get(`${c.reposUrlPrefix}/${n}/git/trees/master?${r?"access_token="+r:""}&recursive=1`).then((e=>{f(o.lsFileTree,e.tree,n),u(!1,n),a(e.tree)})):a(i)}))}function f(e,t,n=a){"object"==typeof t?localStorage.setItem(`${n}#${e}`,JSON.stringify(t)):localStorage.setItem(`${n}#${e}`,t)}function p(e,t=!0,n=a){let o=localStorage.getItem(`${n}#${e}`);return o?t?JSON.parse(o):o:null}async function u(e=!1,t){if(!t)return null;let n=await l(e,t);for(let e of n)s.fileShaMap.set(`${c.repo}#${e.path}`,e.sha)}return{getFileTree:l,getFileContent:async function(o,i=!1,s=!1,l=a){let u=p(o,!1,l);if(!i&&u){let e=t.decode(u);return s?JSON.parse(e):e}let $=await e.get(`${c.reposUrlPrefix}/${l}/contents/${o}?${r?"access_token="+r:""}`);if(!$.content)return n.message(`获取文件内容失败! [${o}]`,"error"),null;f(o,$.content,l);let g=t.decode($.content);return s?JSON.parse(g):g},newFile:async function(o,i,s=a){if(!o||!i)return null;let l=t.encode(i);return new Promise((t=>{e.post(`${c.reposUrlPrefix}/${s}/contents/${o}`,{access_token:r,content:l,message:`open api new ${window.location.pathname}`}).then((async e=>{n.notify("新增成功！","success"),await u(!0,s),t(e)})).catch((e=>{n.notify("新增异常！","error")}))}))},updateFile:async function(o,i,l=a){let p=s.fileShaMap.get(`${l}#${o}`);if(!p)return n.notify(`未匹配文件 ${l}#${o}`,"warning"),null;let $=t.encode(i);return new Promise((t=>{e.put(`${c.reposUrlPrefix}/${l}/contents/${o}`,{access_token:r,content:$,sha:p,message:`open api update ${window.location.pathname}`}).then((async()=>{n.notify(`更新[${o}]成功！`,"success"),f(o,$,l),await u(!0,l),t()})).catch((e=>{n.notify("更新异常！","error")}))}))},deleteFile:async function(t,o=a){let i=s.fileShaMap.get(`${o}#${t}`);return i?new Promise((s=>{e.delete(`${c.reposUrlPrefix}/${o}/contents/${t}`,{params:{access_token:r,sha:i,message:`open api delete ${window.location.pathname}`}}).then((async()=>{n.notify(`删除[${t}]成功！`,"success"),function(e,t=a){localStorage.removeItem(`${t}#${e}`)}(t,o),await u(!0,o),s()})).catch((e=>{}))})):(n.notify(`未匹配文件 ${o}#${t}`,"warning"),null)},initState:async function(){return new Promise((async(e,t)=>{!function(){let e=localStorage.getItem(o.lsLoginState);if(!e)return;s.loginState=JSON.parse(e),r=s.loginState.access_token}(),await u(!1,c.repo),e()}))},clearAllCache:function(){for(let e in localStorage)localStorage.hasOwnProperty(e)&&e&&e!==o.lsLoginState&&localStorage.removeItem(e);location.reload()},setRepo:function(e){c.repo=e,localStorage.setItem(o.lsRepo,e),n.message(`切换数据源[${e}]成功！`)},getRepo:function(){return c.repo},storageKey:o,apiConfig:c}}));