define(["jquery","semantic","utils","gitee"],(function($,semantic,utils,gitee){return{data:()=>({active:"bookmarks",level1Menus:[],level2Menus:[],level3Menus:[],showMenu:!1,showOperation:!1,operationList:[["清空缓存","clearCache"]],asyncOperations:[],cpsOperations:{},appcfg:{}}),watch:{$route(newVal,oldVal){this.active=newVal.path.substr(1),"/login"===oldVal.path&&0===this.level1Menus.length&&this.loadLevelMenu()}},methods:{route(name){name!==this.active&&(this.$router.push(name),this.active=name,this.showMenu=!1)},toggleLeftMenu(){this.showMenu=!0},openOperation(){this.showOperation=!0},loadLevelMenu(){gitee.getFileContent("config/wyd2021.json",!1,!0).then(data=>{this.level1Menus=data.level1Menus,this.level2Menus=data.level2Menus,this.level3Menus=data.level3Menus,this.asyncOperations=data.asyncOperations,this.appcfg=data.appcfg,document.title=this.appcfg.title,this.$nextTick(()=>{$(".dropdown").dropdown({on:"hover",action:function(text,value){$(this).dropdown("hide")}})})})},goURL(url){window.open(url)},toggle(){utils.getVueCps("header").toggleLeftMenu()},callMethods(method){this[method](),this.showOperation=!1},asyncLoadOperations(){gitee.getFileContent("cps/operations.js").then(data=>{let script=document.createElement("script");script.type="text/javascript",script.append(data),document.body.appendChild(script),require(["cps_operations"],data=>{this.cpsOperations=data})})}},mounted(){this.loadLevelMenu(),this.asyncLoadOperations(),utils.isApp&&$("#wyd-header").addClass("pt-3")},template:'\n        <div id="wyd-header" class="ui menu raised inverted wyd-header wyd-border-bottom" wydFlag="header">\n            \n            <div class="header item link" @click="toggleLeftMenu">\n                <img class="ui avatar image" :src="appcfg.logo" />\n                <span class="font-weight-bold">{{appcfg.title}}</span>\n            </div>\n              \n            <a class="item hidden-xs-only" :class="active===lv1Menu[1]?\'active\':\'\'" v-for="lv1Menu in level1Menus" @click="route(lv1Menu[1])">\n                <i class="icon large" :class="lv1Menu[2]"></i>\n                <span>{{lv1Menu[0]}}</span>\n            </a>\n               \n            <div class="ui pointing dropdown link item hidden-xs-only" v-for="lv2Menu in level2Menus">\n                <i class="icon large" :class="lv2Menu.icon"></i>\n                <span class="text">{{lv2Menu.title}}</span>\n                <i class="dropdown icon"></i>\n                <div class="menu">\n                    <template v-for="lv2Link in lv2Menu.children">\n                        <div v-if="typeof lv2Link===\'string\'" class="header">{{lv2Link}}</div>\n                        <div v-else class="item" :class="active===lv2Link[1]?\'active\':\'\'" @click="route(lv2Link[1])">{{lv2Link[0]}}</div>\n                    </template>\n                </div>\n            </div>\n\n            <div class="ui pointing dropdown link item hidden-xs-only" v-for="lv3Menu in level3Menus">\n                <i class="icon large" :class="lv3Menu.icon"></i>\n                <span class="text">{{lv3Menu.title}}</span>\n                <i class="dropdown icon"></i>\n                <div class="menu">\n                    <template v-for="lv3Link in lv3Menu.children">\n                        <div v-if="typeof lv3Link===\'string\'" class="header">{{lv3Link}}</div>\n                        <div v-else  class="item" @click="goURL(lv3Link[1])">{{lv3Link[0]}}</div>\n                    </template>\n                </div>\n            </div>\n\n            <div class="right menu">\n                <a class="ui item" @click="openOperation">\n                    <i class="windows large icon"></i>\n                </a>\n            </div>\n              \n            <el-drawer :visible.sync="showMenu" :append-to-body="true" direction="ltr" size="80%">\n                <h3 slot="title" class="ui header d-flex justify-content-center align-items-center m-0">\n                    <span><i class="ui icon html5 large"></i>导航菜单</span>\n                </h3>\n                \n                <div class="ui selection list d-flex flex-row flex-wrap p-3">\n                    <button @click="route(lv1Menu[1])" class="ui basic button d-flex justify-content-center align-items-center m-1" v-for="lv1Menu in level1Menus">\n                        <i class="icon large" :class="lv1Menu[2]"></i>\n                        {{lv1Menu[0]}}\n                    </button>\n\n                    <template v-for="lv2Menu in level2Menus">\n                        <button @click="route(lv2Link[1])" class="ui basic button d-flex justify-content-center align-items-center m-1" v-for="lv2Link in lv2Menu.children">\n                            <i class="icon large" :class="lv2Link[2]?lv2Link[2]:\'html5\'"></i>\n                            {{lv2Link[0]}}\n                        </button>\n                    </template>\n\n                </div>\n            </el-drawer>\n\n            <el-drawer :visible.sync="showOperation" :append-to-body="true" direction="rtl" size="80%">\n                <h3 slot="title" class="ui header d-flex justify-content-center align-items-center m-0">\n                    <span><i class="ui icon windows large"></i>快捷操作</span>\n                </h3>\n                <div class="ui selection list d-flex flex-row flex-wrap p-3">\n                    <button class="ui basic button d-flex justify-content-center align-items-center m-1" v-for="operation in asyncOperations" @click="cpsOperations[operation[1]]()">\n                            <i class="icon large" :class="operation[2]?operation[2]:\'code\'"></i>{{operation[0]}}\n                    </button>\n                </div>\n            </el-drawer>\n            \n        </div>\n        '}}));