define(["vue","require","gitee","utils"],(function(Vue,require,gitee,utils){let bmTypeList=[],bmTagList=[],bmList=[];function recursionBookmark(bm,type,tag){if(bm.a)for(let cbm of bm.a)cbm.a?(bmTagList.push({name:cbm.b,type:type}),recursionBookmark(cbm,type,cbm.b)):recursionBookmark(cbm,type,tag);else bm.c&&(type&&(bm.type=type),tag&&(bm.tag=tag),bmList.push(bm))}return{name:"bookmarks",data:()=>({bmTypeList:[],bmTagList:[],bmList:[],checkedType:"",checkedTag:"",searchTxt:"",loading:!1,bmSourceFilePath:"",bmSourceFile:{},bmSourceFiles:[]}),watch:{checkedType(val){this.checkedTag="",this.bmTagList=bmTagList.filter(n=>n.type===val),this.bmList=bmList.filter(n=>n.type===val)}},methods:{initSearch(){$(".ui.search").search({source:[{title:"test",actionUrl:"https://zijieke.com/semantic-ui/modules/search.php#/settings"}],minCharacters:0,selectFirstResult:!0,onSelect(result,response){console.log(result)}})},logout(){let result;confirm("确认登出？")&&(localStorage.clear(),window.location.href="/login.html")},search(){""===this.searchTxt?this.bmList=bmList.filter(n=>n.type===this.checkedType):this.bmList=bmList.filter(n=>-1!==n.b.toUpperCase().indexOf(this.searchTxt.toUpperCase())||-1!==n.c.toUpperCase().indexOf(this.searchTxt.toUpperCase())),this.checkedTag="",this.searchTxt=""},typeClick(type){this.bmList=bmList.filter(n=>n.type===type)},tagClick(tag){let checkedTag=tag.name;tag.name===this.checkedTag&&(this.checkedTag="",checkedTag=""),this.checkedTag=checkedTag,this.bmList=""!==checkedTag?bmList.filter(bm=>!!bm.tag&&bm.tag===checkedTag):bmList.filter(n=>n.type===this.checkedType)},refreshData(){return utils.confirm("确认重新下载书签数据?","提示",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then(()=>{this.checkedType="",this.checkedTag="",bmList=[],bmTypeList=[],bmTagList=[],this.bmTypeList=[],this.bmTagList=[],this.bmList=[],this.loadData(!0,this.bmSourceFile)}).catch(()=>{}),!1},loadData(refreshCache,file,call){gitee.getFileContent(file.path,refreshCache,!0,file.repo).then(data=>{this.bmDataHandle(data),call()})},bmDataHandle(bmRoot){let rootBmList=bmRoot.a;for(let bm of rootBmList)bm.a?(recursionBookmark(bm,bm.b,null),bmTypeList.push(bm.b)):recursionBookmark(bm,null,null);this.checkedType=bmTypeList[0],this.bmTypeList=bmTypeList,this.bmTagList=bmTagList,this.bmList=bmList,this.loading=!1},changeSource(file){file.path!==this.bmSourceFilePath&&(bmTypeList=[],bmTagList=[],bmList=[],this.loadData(!1,file,()=>{this.bmSourceFile=file,this.bmSourceFilePath=file.path}))}},mounted(){bmTypeList=[],bmTagList=[],bmList=[];let config=gitee.getWydConfig();config&&config.bookmarksChrome&&(this.bmSourceFiles=config.bookmarksChrome.bmSourceFiles,this.changeSource(this.bmSourceFiles[0]))},template:'\n            <div class="ui container pb-5 segment mb-5">\n                <div class="ui buttons">\n                    <template v-for="(bsf,index) in bmSourceFiles">\n                      <button :title="bsf.note+\'-\'+bsf.path" class="ui button" :class="bsf.path===bmSourceFilePath ? \'active blue\':\'\'" @click="changeSource(bsf)">{{bsf.name}}</button>\n                      <div class="or" v-if="index<bmSourceFiles.length-1"></div>\n                    </template>\n                </div>\n                <div class="my-3 d-flex flex-row">\n                    <div class="ui search flex-grow-1">\n                        <div class="ui icon input d-flex">\n                            <input class="search" type="text" @keyup.enter="search" v-model="searchTxt" placeholder="搜索书签..."\n                                   autocomplete="off"/>\n                            <i class="search icon"></i>\n                        </div>\n                    </div>\n                    <button class="ui icon button ml-1" data-tooltip="下载书签" data-position="bottom left"\n                            @click="refreshData"><i class="sync icon"></i></button>\n                </div>\n                <div class="ui raised segment"><span class="ui ribbon label green">分类</span>\n                    <template v-for="type in bmTypeList">\n                        <button class="ui button mt-1" :class="checkedType==type ? \'positive\' :\'\' "\n                                @click="checkedType=type">\n                            {{type}}\n                        </button>\n                    </template>\n                </div>\n                <div class="ui raised segment" v-if="bmTagList.length>0"><span class="ui ribbon label teal">标签</span><a\n                        class="ui tag label mt-1" :class="checkedTag==tag.name ? \'teal\' :\'\' " v-for="tag in bmTagList"\n                        @click="tagClick(tag)">{{tag.name}}</a></div>\n                <div class="ui cards centered mt-4">\n                    <a class="card" target="_blank" :href="bm.c" v-for="bm in bmList">\n                        <div class="content overflow-hidden">\n                            <p class="ui header small d-inline text-nowrap" :title="bm.b">{{bm.b}} </p>\n                            <div class="meta text-nowrap">{{bm.tag}}</div>\n                            <div class="description text-nowrap" :title="bm.c">{{bm.c}}</div>\n                        </div>\n                    </a>\n                </div>\n            </div>\n        '}}));