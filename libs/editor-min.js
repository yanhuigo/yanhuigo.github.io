define(["vue","require","gitee","utils","markdownIt","monacoSupport","jquery","semantic"],(function(e,t,i,l,n,o){n();return{data:()=>({selectedFile:"",fileList:[],showTree:!0,showIframe:!0,renderFileContent:"<h2>Hello</h2>",repo:i.getRepo(),mdContent:"",hasMdf:!1,originalModel:null,modifiedModel:null,diffEditor:null,editorFiles:[],editor:null,models:{},position:{}}),watch:{selectedFile(e){this.hasMdf=!!localStorage.getItem(`${this.repo}#@${e}`)}},methods:{closeAllModel(){let e=monaco.editor.getModels();if(e){for(let t of e)t.dispose();this.editorFiles=[],this.models={},this.selectedFile=""}},tabClick(e){this.selectFile(e.label)},tabRemove(e){let t=this.editorFiles.findIndex((t=>t===e));this.editorFiles.splice(t,1),this.models[e].dispose(),delete this.models[e],0===this.editorFiles.length?this.selectedFile="":e===this.selectedFile&&this.selectFile(this.editorFiles[0])},setRepo(e){e!==i.getRepo()&&i.getFileTree(!1,e).then((()=>{this.closeAllModel(),this.repo=e,this.selectedFile="",this.editor.setValue(""),i.setRepo(e),this.initSemantic(!1)}))},closeIframe(){this.showIframe=!1},openInNewTab(){window.open(`/preview.html?p=${this.selectedFile.split("/")[1].split(".")[0]}`)},openCpsInNewTab(){window.open(`/#/ar_${this.selectedFile.split("/")[1].split(".")[0]}`)},previewDiff(){$("#ed-diff-modal").modal("show");let e=localStorage.getItem(`${this.repo}#${this.selectedFile}`),t=localStorage.getItem(`${this.repo}#@${this.selectedFile}`);this.diffEditor?(this.originalModel.setValue(e),this.modifiedModel.setValue(t)):(this.originalModel=monaco.editor.createModel(e,"text/plain"),this.modifiedModel=monaco.editor.createModel(t,"text/plain"),this.diffEditor=monaco.editor.createDiffEditor(document.getElementById("ed-diff-content"),{automaticLayout:!0}),this.diffEditor.setModel({original:this.originalModel,modified:this.modifiedModel})),this.setLanguage(this.originalModel),this.setLanguage(this.modifiedModel)},runJs(){let e=this.editor.getModel().getValueInRange(this.editor.getSelection());e||(e=this.editor.getValue()),window.eval(e)},addFile(){l.prompt("请输入文件路径","新增文件",{inputPattern:/^[\w/](.)+[a-z]+$/,inputErrorMessage:"格式不正确"}).then((({value:e})=>{i.newFile(e,"new File init",this.repo).then((()=>{this.initSemantic(!0)}))})).catch((()=>{}))},syncFiles(){l.confirm("是否重新同步文件树?","提示",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then((()=>{i.getFileTree(!0,this.repo).then((e=>{l.notify("同步文件树完成！"),this.initSemantic(!0)}))})).catch((()=>{}))},deleteFile(){""!==this.selectedFile?l.confirm(`确认删除文件[${this.selectedFile}]?`,"提示",{confirmButtonText:"确定",cancelButtonText:"取消",type:"warning"}).then((()=>{i.deleteFile(this.selectedFile,this.repo).then((e=>{this.editor.setValue(""),this.selectedFile="",this.initSemantic(!0)}))})).catch((()=>{})):l.message("请选择文件","info")},setLanguage(e){let t=this.selectedFile.substr(this.selectedFile.lastIndexOf(".")+1);switch(t){case"md":t="markdown";break;case"js":t="javascript";break;default:break}monaco.editor.setModelLanguage(e,t)},loadFile(e=!1){i.getFileContent(this.selectedFile,e,!1,this.repo).then((t=>{-1===this.editorFiles.indexOf(this.selectedFile)&&this.editorFiles.push(this.selectedFile);let i=this.models[this.selectedFile];i||(i=monaco.editor.createModel(t,"text/plain"),this.setLanguage(i),this.models[this.selectedFile]=i),this.editor.setModel(i);let n=this.position[this.selectedFile];n&&this.editor.revealPositionInCenter(n),e&&(l.notify(`已重新加载文件 ${this.selectedFile}`,"success"),this.hasMdf=!1)}))},initMonacoEditor(){t(["vs/editor/editor.main"],(()=>{o.suggestion(),this.editor=monaco.editor.create(document.getElementById("editor-container"),{value:"点击左侧列表文件开始编辑...",language:"markdown",theme:"vs",automaticLayout:!0}),window.wyd_editor=this.editor,this.initEditorActions()}))},async initSemantic(e=!1){let t,l=await i.getFileTree(e,this.repo),n=[];for(let e of l)"tree"===e.type?t&&e.path.startsWith(t.file.path+"/")||(t={file:e,children:[]},n.push(t)):t&&-1!==e.path.indexOf(t.file.path)?t.children.push(e):n.push({file:e});let o=l.filter((e=>"blob"===e.type)).map((e=>({title:e.path})));this.fileList=n;let s=this;$("#ed-file-search").search({source:o,minCharacters:1,selectFirstResult:!0,onSelect(e,t){s.selectFile(e.title)}})},selectFile(e){let t=this.editor.getPosition();this.position[this.selectedFile]=t,this.selectedFile=e,this.loadFile()},update(e=!0){if(""===this.selectedFile)return void l.message("请选择编辑文件","info");let t=this.editor.getValue();e?i.getFileContent(this.selectedFile,!1,!1,this.repo).then((e=>{e!==t?(i.updateFileCache(this.selectedFile,t,this.repo),this.hasMdf=!0):l.message("文件内容未变化！","info")})):i.updateFile(this.selectedFile,t,this.repo).then((()=>{this.hasMdf=!1}))},initEditorActions(){let e=[{name:"保存文件",group:"yh-file",keys:[monaco.KeyMod.CtrlCmd|monaco.KeyCode.KEY_S],call:()=>{this.update()}},{name:"清空文件树缓存",group:"yh-file",call:()=>{confirm("确认清空文件树缓存？")&&common.initFileTree().then((e=>{l.message("清空文件树缓存完成！")}))}}],t=0;for(let i of e)this.editor.addAction({id:"yh-editor-"+ ++t,label:i.name,keybindings:i.keys?i.keys:[],precondition:null,keybindingContext:null,contextMenuGroupId:i.group?i.group:"yh-editor",contextMenuOrder:1.5+t,run:i.call})},openInMdEditor(){this.$router.push({path:"ar_simplemde",query:{filepath:this.selectedFile,repo:this.repo}})}},mounted(){this.initMonacoEditor(),this.initSemantic()},template:'\n            <div class="mt-header d-sm-flex ui mx-2" wydFlag="editor" style="height: calc(100vh - 86px)">\n                \n                <button v-if="!showTree" class="ui icon button green" title="显示文件树" style="height: 3rem"\n                        @click="showTree=!showTree">\n                    <i class="arrow right icon"></i>\n                </button>\n                \n                <div class="ui vertical menu p-1 m-0 file-tree overflow-auto w-100-xs-only" style="min-width:240px;" v-show="showTree">\n                    <div class="d-flex justify-content-start flex-wrap wyd-editor-operations">\n                        <div class="ui buttons w-100">\n                              <button @click="setRepo(\'webdata\')" class="ui button" :class="repo===\'webdata\'?\'active teal\':\'\'"><i class="heart icon"></i>webData</button>\n                              <div class="or"></div>\n                              <button @click="setRepo(\'webme\')" class="ui button" :class="repo===\'webme\'?\'active red\':\'\'"><i class="user secret icon"></i>webMe</button>\n                        </div>\n                        <el-tooltip content="新增文件" placement="bottom">\n                            <button class="ui compact icon button small" @click="addFile">\n                                <i class="plus icon"></i>\n                            </button>\n                        </el-tooltip>\n                        <el-tooltip content="同步文件树" placement="bottom">\n                            <button class="ui compact icon button" @click="syncFiles">\n                                <i class="sync alternate icon"></i>\n                            </button>\n                        </el-tooltip>\n                        <el-tooltip content="隐藏文件树" placement="bottom">\n                            <button v-show="showTree" class="ui compact icon button" @click="showTree=!showTree">\n                                <i class="arrow left icon"></i>\n                            </button>\n                        </el-tooltip>\n                    </div>\n                    <div class="item ui search my-1" id="ed-file-search">\n                        <div class="ui icon input search">\n                            <input class="prompt" type="text" placeholder="Search Files..."/>\n                            <i class="search icon"></i>\n                        </div>\n                        <div class="results"></div>\n                    </div>\n                    <div class="item" v-for="file in fileList">\n                        <template v-if="file.children">\n                            <div class="header">{{file.file.path}}</div>\n                            <div class="menu" v-for="subFile in file.children">\n                                <a class="item" @click="selectFile(subFile.path)" :class="selectedFile===subFile.path ? \'active teal\':\'\'">\n                                    <i class="icon git"></i>\n                                    <span>{{subFile.path.split(file.file.path + "/")[1]}}</span> \n                                </a>\n                            </div>\n                        </template>\n                        <div class="menu" v-else>\n                            <a class="item" @click="selectFile(file.file.path)" :class="selectedFile===file.file.path ? \'active teal\':\'\'">\n                                {{file.file.path}} \n                            </a>\n                        </div>\n                    </div>\n                </div>\n                \n                <div class="flex-grow-1 d-md-flex flex-column w-100-xs-only">\n                    <div class="wyd-editor-tabs">\n                        <el-tabs style="max-width:90%" :value="selectedFile" type="card" closable @tab-click="tabClick" @tab-remove="tabRemove">\n                            <el-tab-pane disabled>\n                                <span slot="label"><i class="ui icon edit"></i></span>\n                            </el-tab-pane>\n                            <el-tab-pane v-for="editorFile in editorFiles" :name="editorFile" :label="editorFile"></el-tab-pane>\n                        </el-tabs>\n                    </div>\n                    <div class="flex-grow-1 vh-50-xs-only" id="editor-container"></div>\n                    <div class="ui divider m-0"></div>\n                    <div class="d-flex justify-content-start flex-wrap pl-2 pt-1">\n                        <button class="ui button disabled">\n                            <i class="smile outline icon"></i>操作区 <i class="arrow right icon"></i>\n                        </button>\n                        <template v-if="selectedFile">\n                            <el-tooltip content="上传文件" placement="top" v-if="hasMdf">\n                                <button class="ui compact icon red button ml-1" @click="previewDiff">\n                                    <i class="upload icon"></i>\n                                </button>\n                            </el-tooltip>\n                            <el-tooltip content="下载文件" placement="top">\n                                <button class="ui compact icon teal button ml-1" @click="loadFile(true)">\n                                    <i class="download icon"></i>\n                                </button>\n                            </el-tooltip>\n                            <el-tooltip content="保存文件(Ctrl+s)" placement="bottom">\n                                <button class="ui compact icon teal button" @click="update">\n                                    <i class="save alternate outline icon"></i>\n                                </button>\n                            </el-tooltip>\n                            <el-tooltip content="删除文件" placement="bottom">\n                                <button class="ui compact teal icon button ml-1" @click="deleteFile">\n                                    <i class="trash alternate outline icon"></i>\n                                </button>\n                            </el-tooltip>\n                            <el-tooltip content="使用markdown编辑器" placement="top">\n                                <button v-show="selectedFile.endsWith(\'.md\')" class="ui compact icon primary button" @click="openInMdEditor">\n                                    <i class="medium m icon"></i>\n                                </button>\n                            </el-tooltip>\n                            <el-tooltip content="运行选中的js" placement="top">\n                                <button v-show="selectedFile.endsWith(\'.js\')" class="ui compact icon primary button" @click="runJs">\n                                    <i class="node js icon"></i>\n                                </button>\n                            </el-tooltip>\n                            <el-tooltip content="新窗口打开当前组件" placement="top">\n                                <button v-show="selectedFile.startsWith(\'cps/\')" class="ui compact icon primary button" @click="openCpsInNewTab">\n                                    <i class="html5 icon"></i>\n                                </button>\n                            </el-tooltip>\n                            <el-tooltip content="在新窗口打开页面" placement="top">\n                                <button v-show="selectedFile.startsWith(\'pages/\')" class="ui compact icon primary button" @click="openInNewTab">\n                                    <i class="html5 icon"></i>\n                                </button>\n                            </el-tooltip>\n                            <el-tooltip content="关闭所有下拉框" placement="top" v-if="editorFiles.length>0">\n                                <button class="ui compact icon button ml-1" @click="closeAllModel">\n                                    <i class="close icon"></i>\n                                </button>\n                            </el-tooltip>\n                        </template>\n                    </div>\n                </div>\n                \n                <div id="ed-diff-modal" class="ui modal large">\n                  <div class="header">差异对比【{{selectedFile}}】</div>\n                  <div class="content p-0">\n                    <div id="ed-diff-content" style="height: 50vh"></div>\n                  </div>\n                  <div class="actions">\n                    <div class="ui approve green button" @click="update(false)">上传</div>\n                    <div class="ui cancel button" @click="loadFile(true)">还原</div>\n                    <div class="ui cancel button">取消</div>\n                  </div>\n                </div>\n                    \n            </div>\n        '}}));