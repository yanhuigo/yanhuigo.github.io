{"meta":{"title":"颜辉 ☆ JCoder","subtitle":"愿你成为自己喜欢的模样，不抱怨，不将就，有自由，有光芒。 <br /> 人生若只如初见，何事秋风悲画扇。","description":"","author":"颜辉","url":"http://yanhui2018.gitee.io","root":"/note/"},"pages":[{"title":"categories","date":"2020-04-18T05:55:35.000Z","updated":"2020-05-10T13:52:53.802Z","comments":false,"path":"categories/index.html","permalink":"http://yanhui2018.gitee.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2020-04-18T05:55:03.000Z","updated":"2020-05-10T14:17:16.280Z","comments":false,"path":"tags/index.html","permalink":"http://yanhui2018.gitee.io/tags/index.html","excerpt":"","text":""},{"title":"","date":"2020-06-11T09:24:19.227Z","updated":"2020-06-11T09:24:19.227Z","comments":true,"path":"libs/highlight/github.min.css","permalink":"http://yanhui2018.gitee.io/libs/highlight/github.min.css","excerpt":"","text":".hljs{display:block;overflow-x:auto;padding:.5em;color:#333;background:#f8f8f8}.hljs-comment,.hljs-quote{color:#998;font-style:italic}.hljs-keyword,.hljs-selector-tag,.hljs-subst{color:#333;font-weight:700}.hljs-literal,.hljs-number,.hljs-tag .hljs-attr,.hljs-template-variable,.hljs-variable{color:teal}.hljs-doctag,.hljs-string{color:#d14}.hljs-section,.hljs-selector-id,.hljs-title{color:#900;font-weight:700}.hljs-subst{font-weight:400}.hljs-class .hljs-title,.hljs-type{color:#458;font-weight:700}.hljs-attribute,.hljs-name,.hljs-tag{color:navy;font-weight:400}.hljs-link,.hljs-regexp{color:#009926}.hljs-bullet,.hljs-symbol{color:#990073}.hljs-built_in,.hljs-builtin-name{color:#0086b3}.hljs-meta{color:#999;font-weight:700}.hljs-deletion{background:#fdd}.hljs-addition{background:#dfd}.hljs-emphasis{font-style:italic}.hljs-strong{font-weight:700}"},{"title":"","date":"2020-06-11T09:35:12.497Z","updated":"2020-06-11T09:35:12.497Z","comments":true,"path":"libs/highlight/highlight.min.js","permalink":"http://yanhui2018.gitee.io/libs/highlight/highlight.min.js","excerpt":"","text":"/* Highlight.js 10.0.0 (51906fbb) License: BSD-3-Clause Copyright (c) 2006-2020, Ivan Sagalaev */ !function(e,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):(e=e||self).hljs=n()}(this,(function(){\"use strict\";function e(n){Object.freeze(n);var t=\"function\"==typeof n;return Object.getOwnPropertyNames(n).forEach((function(r){!n.hasOwnProperty(r)||null===n[r]||\"object\"!=typeof n[r]&&\"function\"!=typeof n[r]||t&&(\"caller\"===r||\"callee\"===r||\"arguments\"===r)||Object.isFrozen(n[r])||e(n[r])})),n}function n(e){return e.replace(/&/g,\"&amp;\").replace(//g,\"&gt;\")}function t(e){var n,t={},r=Array.prototype.slice.call(arguments,1);for(n in e)t[n]=e[n];return r.forEach((function(e){for(n in e)t[n]=e[n]})),t}function r(e){return e.nodeName.toLowerCase()}var a=Object.freeze({__proto__:null,escapeHTML:n,inherit:t,nodeStream:function(e){var n=[];return function e(t,a){for(var i=t.firstChild;i;i=i.nextSibling)3===i.nodeType?a+=i.nodeValue.length:1===i.nodeType&&(n.push({event:\"start\",offset:a,node:i}),a=e(i,a),r(i).match(/br|hr|img|input/)||n.push({event:\"stop\",offset:a,node:i}));return a}(e,0),n},mergeStreams:function(e,t,a){var i=0,s=\"\",o=[];function l(){return e.length&&t.length?e[0].offset!==t[0].offset?e[0].offset|\\t|)+|(?:\\n)))/gm,d=\"Could not find the language '{}', did you forget to load/include a language module?\",g={noHighlightRe:/^(no-?highlight)$/i,languageDetectRe:/\\blang(?:uage)?-([\\w-]+)\\b/i,classPrefix:\"hljs-\",tabReplace:null,useBR:!1,languages:void 0,__emitter:c};function h(e){return g.noHighlightRe.test(e)}function f(e,n,t,r){var a={code:n,language:e};T(\"before:highlight\",a);var i=a.result?a.result:p(a.language,a.code,t,r);return i.code=a.code,T(\"after:highlight\",i),i}function p(e,n,r,i){var s=n;function l(e,n){var t=v.case_insensitive?n[0].toLowerCase():n[0];return e.keywords.hasOwnProperty(t)&&e.keywords[t]}function c(){null!=_.subLanguage?function(){if(\"\"!==k){var e=\"string\"==typeof _.subLanguage;if(!e||a[_.subLanguage]){var n=e?p(_.subLanguage,k,!0,E[_.subLanguage]):m(k,_.subLanguage.length?_.subLanguage:void 0);_.relevance>0&&(T+=n.relevance),e&&(E[_.subLanguage]=n.top),w.addSublanguage(n.emitter,n.language)}else w.addText(k)}}():function(){var e,n,t,r;if(_.keywords){for(n=0,_.lexemesRe.lastIndex=0,t=_.lexemesRe.exec(k),r=\"\";t;){r+=k.substring(n,t.index);var a=null;(e=l(_,t))?(w.addText(r),r=\"\",T+=e[1],a=e[0],w.addKeyword(t[0],a)):r+=t[0],n=_.lexemesRe.lastIndex,t=_.lexemesRe.exec(k)}r+=k.substr(n),w.addText(r)}else w.addText(k)}(),k=\"\"}function h(e){e.className&&w.openNode(e.className),_=Object.create(e,{parent:{value:_}})}var f={};function b(n,t){var a,i=t&&t[0];if(k+=n,null==i)return c(),0;if(\"begin\"==f.type&&\"end\"==t.type&&f.index==t.index&&\"\"===i){if(k+=s.slice(t.index,t.index+1),!o)throw(a=Error(\"0 width match regex\")).languageName=e,a.badRule=f.rule,a;return 1}if(f=t,\"begin\"===t.type)return function(e){var n=e[0],t=e.rule;return t.__onBegin&&(t.__onBegin(e)||{}).ignoreMatch?function(e){return 0===_.matcher.regexIndex?(k+=e[0],1):(A=!0,0)}(n):(t&&t.endSameAsBegin&&(t.endRe=RegExp(n.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g,\"\\\\$&\"),\"m\")),t.skip?k+=n:(t.excludeBegin&&(k+=n),c(),t.returnBegin||t.excludeBegin||(k=n)),h(t),t.returnBegin?0:n.length)}(t);if(\"illegal\"===t.type&&!r)throw(a=Error('Illegal lexeme \"'+i+'\" for mode \"'+(_.className||\"\")+'\"')).mode=_,a;if(\"end\"===t.type){var l=function(e){var n=e[0],t=s.substr(e.index),r=function e(n,t){if(function(e,n){var t=e&&e.exec(n);return t&&0===t.index}(n.endRe,t)){for(;n.endsParent&&n.parent;)n=n.parent;return n}if(n.endsWithParent)return e(n.parent,t)}(_,t);if(r){var a=_;a.skip?k+=n:(a.returnEnd||a.excludeEnd||(k+=n),c(),a.excludeEnd&&(k=n));do{_.className&&w.closeNode(),_.skip||_.subLanguage||(T+=_.relevance),_=_.parent}while(_!==r.parent);return r.starts&&(r.endSameAsBegin&&(r.starts.endRe=r.endRe),h(r.starts)),a.returnEnd?0:n.length}}(t);if(null!=l)return l}return k+=i,i.length}var v=M(e);if(!v)throw console.error(d.replace(\"{}\",e)),Error('Unknown language: \"'+e+'\"');!function(e){function n(n,t){return RegExp(u(n),\"m\"+(e.case_insensitive?\"i\":\"\")+(t?\"g\":\"\"))}class r{constructor(){this.matchIndexes={},this.regexes=[],this.matchAt=1,this.position=0}addRule(e,n){n.position=this.position++,this.matchIndexes[this.matchAt]=n,this.regexes.push([n,e]),this.matchAt+=function(e){return RegExp(e.toString()+\"|\").exec(\"\").length-1}(e)+1}compile(){0===this.regexes.length&&(this.exec=()=>null);let e=this.regexes.map(e=>e[1]);this.matcherRe=n(function(e,n){for(var t=/\\[(?:[^\\\\\\]]|\\\\.)*\\]|\\(\\??|\\\\([1-9][0-9]*)|\\\\./,r=0,a=\"\",i=0;i0&&(a+=\"|\"),a+=\"(\";o.length>0;){var l=t.exec(o);if(null==l){a+=o;break}a+=o.substring(0,l.index),o=o.substring(l.index+l[0].length),\"\\\\\"==l[0][0]&&l[1]?a+=\"\\\\\"+(+l[1]+s):(a+=l[0],\"(\"==l[0]&&r++)}a+=\")\"}return a}(e),!0),this.lastIndex=0}exec(e){this.matcherRe.lastIndex=this.lastIndex;let n=this.matcherRe.exec(e);if(!n)return null;let t=n.findIndex((e,n)=>n>0&&null!=e),r=this.matchIndexes[t];return Object.assign(n,r)}}class a{constructor(){this.rules=[],this.multiRegexes=[],this.count=0,this.lastIndex=0,this.regexIndex=0}getMatcher(e){if(this.multiRegexes[e])return this.multiRegexes[e];let n=new r;return this.rules.slice(e).forEach(([e,t])=>n.addRule(e,t)),n.compile(),this.multiRegexes[e]=n,n}considerAll(){this.regexIndex=0}addRule(e,n){this.rules.push([e,n]),\"begin\"===n.type&&this.count++}exec(e){let n=this.getMatcher(this.regexIndex);n.lastIndex=this.lastIndex;let t=n.exec(e);return t&&(this.regexIndex+=t.position+1,this.regexIndex===this.count&&(this.regexIndex=0)),t}}function i(e){let n=e.input[e.index-1],t=e.input[e.index+e[0].length];if(\".\"===n||\".\"===t)return{ignoreMatch:!0}}if(e.contains&&e.contains.includes(\"self\"))throw Error(\"ERR: contains `self` is not supported at the top-level of a language. See documentation.\");!function r(s,o){s.compiled||(s.compiled=!0,s.__onBegin=null,s.keywords=s.keywords||s.beginKeywords,s.keywords&&(s.keywords=function(e,n){var t={};return\"string\"==typeof e?r(\"keyword\",e):Object.keys(e).forEach((function(n){r(n,e[n])})),t;function r(e,r){n&&(r=r.toLowerCase()),r.split(\" \").forEach((function(n){var r=n.split(\"|\");t[r[0]]=[e,R(r[0],r[1])]}))}}(s.keywords,e.case_insensitive)),s.lexemesRe=n(s.lexemes||/\\w+/,!0),o&&(s.beginKeywords&&(s.begin=\"\\\\b(\"+s.beginKeywords.split(\" \").join(\"|\")+\")(?=\\\\b|\\\\s)\",s.__onBegin=i),s.begin||(s.begin=/\\B|\\b/),s.beginRe=n(s.begin),s.endSameAsBegin&&(s.end=s.begin),s.end||s.endsWithParent||(s.end=/\\B|\\b/),s.end&&(s.endRe=n(s.end)),s.terminator_end=u(s.end)||\"\",s.endsWithParent&&o.terminator_end&&(s.terminator_end+=(s.end?\"|\":\"\")+o.terminator_end)),s.illegal&&(s.illegalRe=n(s.illegal)),null==s.relevance&&(s.relevance=1),s.contains||(s.contains=[]),s.contains=[].concat(...s.contains.map((function(e){return function(e){return e.variants&&!e.cached_variants&&(e.cached_variants=e.variants.map((function(n){return t(e,{variants:null},n)}))),e.cached_variants?e.cached_variants:function e(n){return!!n&&(n.endsWithParent||e(n.starts))}(e)?t(e,{starts:e.starts?t(e.starts):null}):Object.isFrozen(e)?t(e):e}(\"self\"===e?s:e)}))),s.contains.forEach((function(e){r(e,s)})),s.starts&&r(s.starts,o),s.matcher=function(e){let n=new a;return e.contains.forEach(e=>n.addRule(e.begin,{rule:e,type:\"begin\"})),e.terminator_end&&n.addRule(e.terminator_end,{type:\"end\"}),e.illegal&&n.addRule(e.illegal,{type:\"illegal\"}),n}(s))}(e)}(v);var x,_=i||v,E={},w=new g.__emitter(g);!function(){for(var e=[],n=_;n!==v;n=n.parent)n.className&&e.unshift(n.className);e.forEach(e=>w.openNode(e))}();var y,O,k=\"\",T=0,L=0;try{var A=!1;for(_.matcher.considerAll();A?A=!1:(_.matcher.lastIndex=L,_.matcher.considerAll()),y=_.matcher.exec(s);)O=b(s.substring(L,y.index),y),L=y.index+O;return b(s.substr(L)),w.closeAllNodes(),w.finalize(),x=w.toHTML(),{relevance:T,value:x,language:e,illegal:!1,emitter:w,top:_}}catch(n){if(n.message&&n.message.includes(\"Illegal\"))return{illegal:!0,illegalBy:{msg:n.message,context:s.slice(L-100,L+100),mode:n.mode},sofar:x,relevance:0,value:N(s),emitter:w};if(o)return{relevance:0,value:N(s),emitter:w,language:e,top:_,errorRaised:n};throw n}}function m(e,n){n=n||g.languages||Object.keys(a);var t={relevance:0,emitter:new g.__emitter(g),value:N(e)},r=t;return n.filter(M).filter(k).forEach((function(n){var a=p(n,e,!1);a.language=n,a.relevance>r.relevance&&(r=a),a.relevance>t.relevance&&(r=t,t=a)})),r.language&&(t.second_best=r),t}function b(e){return g.tabReplace||g.useBR?e.replace(l,(function(e,n){return g.useBR&&\"\\n\"===e?\"\":g.tabReplace?n.replace(/\\t/g,g.tabReplace):\"\"})):e}function v(e){var n,t,r,a,s,o=function(e){var n,t=e.className+\" \";if(t+=e.parentNode?e.parentNode.className:\"\",n=g.languageDetectRe.exec(t)){var r=M(n[1]);return r||(console.warn(d.replace(\"{}\",n[1])),console.warn(\"Falling back to no-highlight mode for this block.\",e)),r?n[1]:\"no-highlight\"}return t.split(/\\s+/).find(e=>h(e)||M(e))}(e);h(o)||(T(\"before:highlightBlock\",{block:e,language:o}),g.useBR?(n=document.createElement(\"div\")).innerHTML=e.innerHTML.replace(/\\n/g,\"\").replace(//g,\"\\n\"):n=e,s=n.textContent,r=o?f(o,s,!0):m(s),(t=y(n)).length&&((a=document.createElement(\"div\")).innerHTML=r.value,r.value=O(t,y(a),s)),r.value=b(r.value),T(\"after:highlightBlock\",{block:e,result:r}),e.innerHTML=r.value,e.className=function(e,n,t){var r=n?i[n]:t,a=[e.trim()];return e.match(/\\bhljs\\b/)||a.push(\"hljs\"),e.includes(r)||a.push(r),a.join(\" \").trim()}(e.className,o,r.language),e.result={language:r.language,re:r.relevance},r.second_best&&(e.second_best={language:r.second_best.language,re:r.second_best.relevance}))}function x(){if(!x.called){x.called=!0;var e=document.querySelectorAll(\"pre code\");r.forEach.call(e,v)}}var E={disableAutodetect:!0};function M(e){return e=(e||\"\").toLowerCase(),a[e]||a[i[e]]}function k(e){var n=M(e);return n&&!n.disableAutodetect}function T(e,n){var t=e;s.forEach((function(e){e[t]&&e[t](n)}))}Object.assign(n,{highlight:f,highlightAuto:m,fixMarkup:b,highlightBlock:v,configure:function(e){g=w(g,e)},initHighlighting:x,initHighlightingOnLoad:function(){window.addEventListener(\"DOMContentLoaded\",x,!1)},registerLanguage:function(e,t){var r;try{r=t(n)}catch(n){if(console.error(\"Language definition for '{}' could not be registered.\".replace(\"{}\",e)),!o)throw n;console.error(n),r=E}r.name||(r.name=e),a[e]=r,r.rawDefinition=t.bind(null,n),r.aliases&&r.aliases.forEach((function(n){i[n]=e}))},listLanguages:function(){return Object.keys(a)},getLanguage:M,requireLanguage:function(e){var n=M(e);if(n)return n;throw Error(\"The '{}' language is required, but not loaded.\".replace(\"{}\",e))},autoDetection:k,inherit:w,addPlugin:function(e,n){s.push(e)}}),n.debugMode=function(){o=!1},n.safeMode=function(){o=!0},n.versionString=\"10.0.0\";for(const n in _)\"object\"==typeof _[n]&&e(_[n]);return Object.assign(n,_),n}({})})); hljs.registerLanguage(\"apache\",function(){\"use strict\";return function(e){var n={className:\"number\",begin:\"\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}\\\\.\\\\d{1,3}(:\\\\d{1,5})?\"};return{name:\"Apache config\",aliases:[\"apacheconf\"],case_insensitive:!0,contains:[e.HASH_COMMENT_MODE,{className:\"section\",begin:\"\",contains:[n,{className:\"number\",begin:\":\\\\d{1,5}\"},e.inherit(e.QUOTE_STRING_MODE,{relevance:0})]},{className:\"attribute\",begin:/\\w+/,relevance:0,keywords:{nomarkup:\"order deny allow setenv rewriterule rewriteengine rewritecond documentroot sethandler errordocument loadmodule options header listen serverroot servername\"},starts:{end:/$/,relevance:0,keywords:{literal:\"on off all deny allow\"},contains:[{className:\"meta\",begin:\"\\\\s\\\\[\",end:\"\\\\]$\"},{className:\"variable\",begin:\"[\\\\$%]\\\\{\",end:\"\\\\}\",contains:[\"self\",{className:\"number\",begin:\"[\\\\$%]\\\\d+\"}]},n,{className:\"number\",begin:\"\\\\d+\"},e.QUOTE_STRING_MODE]}}],illegal:/\\S/}}}()); hljs.registerLanguage(\"bash\",function(){\"use strict\";return function(e){const s={};Object.assign(s,{className:\"variable\",variants:[{begin:/\\$[\\w\\d#@][\\w\\d_]*/},{begin:/\\$\\{/,end:/\\}/,contains:[{begin:/:-/,contains:[s]}]}]});const n={className:\"subst\",begin:/\\$\\(/,end:/\\)/,contains:[e.BACKSLASH_ESCAPE]},t={className:\"string\",begin:/\"/,end:/\"/,contains:[e.BACKSLASH_ESCAPE,s,n]};n.contains.push(t);const a={begin:/\\$\\(\\(/,end:/\\)\\)/,contains:[{begin:/\\d+#[0-9a-f]+/,className:\"number\"},e.NUMBER_MODE,s]};return{name:\"Bash\",aliases:[\"sh\",\"zsh\"],lexemes:/\\b-?[a-z\\._]+\\b/,keywords:{keyword:\"if then else elif fi for while in do done case esac function\",literal:\"true false\",built_in:\"break cd continue eval exec exit export getopts hash pwd readonly return shift test times trap umask unset alias bind builtin caller command declare echo enable help let local logout mapfile printf read readarray source type typeset ulimit unalias set shopt autoload bg bindkey bye cap chdir clone comparguments compcall compctl compdescribe compfiles compgroups compquote comptags comptry compvalues dirs disable disown echotc echoti emulate fc fg float functions getcap getln history integer jobs kill limit log noglob popd print pushd pushln rehash sched setcap setopt stat suspend ttyctl unfunction unhash unlimit unsetopt vared wait whence where which zcompile zformat zftp zle zmodload zparseopts zprof zpty zregexparse zsocket zstyle ztcp\",_:\"-ne -eq -lt -gt -f -d -e -s -l -a\"},contains:[{className:\"meta\",begin:/^#![^\\n]+sh\\s*$/,relevance:10},{className:\"function\",begin:/\\w[\\w\\d_]*\\s*\\(\\s*\\)\\s*\\{/,returnBegin:!0,contains:[e.inherit(e.TITLE_MODE,{begin:/\\w[\\w\\d_]*/})],relevance:0},a,e.HASH_COMMENT_MODE,t,{className:\"\",begin:/\\\\\"/},{className:\"string\",begin:/'/,end:/'/},s]}}}()); hljs.registerLanguage(\"c-like\",function(){\"use strict\";return function(e){function t(e){return\"(?:\"+e+\")?\"}var n=\"(decltype\\\\(auto\\\\)|\"+t(\"[a-zA-Z_]\\\\w*::\")+\"[a-zA-Z_]\\\\w*\"+t(\"\")+\")\",r={className:\"keyword\",begin:\"\\\\b[a-z\\\\d_]*_t\\\\b\"},a={className:\"string\",variants:[{begin:'(u8?|U|L)?\"',end:'\"',illegal:\"\\\\n\",contains:[e.BACKSLASH_ESCAPE]},{begin:\"(u8?|U|L)?'(\\\\\\\\(x[0-9A-Fa-f]{2}|u[0-9A-Fa-f]{4,8}|[0-7]{3}|\\\\S)|.)\",end:\"'\",illegal:\".\"},{begin:/(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\((?:.|\\n)*?\\)\\1\"/}]},s={className:\"number\",variants:[{begin:\"\\\\b(0b[01']+)\"},{begin:\"(-?)\\\\b([\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)(u|U|l|L|ul|UL|f|F|b|B)\"},{begin:\"(-?)(\\\\b0[xX][a-fA-F0-9']+|(\\\\b[\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)([eE][-+]?[\\\\d']+)?)\"}],relevance:0},i={className:\"meta\",begin:/#\\s*[a-z]+\\b/,end:/$/,keywords:{\"meta-keyword\":\"if else elif endif define undef warning error line pragma _Pragma ifdef ifndef include\"},contains:[{begin:/\\\\\\n/,relevance:0},e.inherit(a,{className:\"meta-string\"}),{className:\"meta-string\",begin://,end:/$/,illegal:\"\\\\n\"},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},c={className:\"title\",begin:t(\"[a-zA-Z_]\\\\w*::\")+e.IDENT_RE,relevance:0},o=t(\"[a-zA-Z_]\\\\w*::\")+e.IDENT_RE+\"\\\\s*\\\\(\",l={keyword:\"int float while private char char8_t char16_t char32_t catch import module export virtual operator sizeof dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace unsigned long volatile static protected bool template mutable if public friend do goto auto void enum else break extern using asm case typeid wchar_t short reinterpret_cast|10 default double register explicit signed typename try this switch continue inline delete alignas alignof constexpr consteval constinit decltype concept co_await co_return co_yield requires noexcept static_assert thread_local restrict final override atomic_bool atomic_char atomic_schar atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong atomic_ullong new throw return and and_eq bitand bitor compl not not_eq or or_eq xor xor_eq\",built_in:\"std string wstring cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream auto_ptr deque list queue stack vector map set bitset multiset multimap unordered_set unordered_map unordered_multiset unordered_multimap array shared_ptr abort terminate abs acos asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp fscanf future isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan vfprintf vprintf vsprintf endl initializer_list unique_ptr _Bool complex _Complex imaginary _Imaginary\",literal:\"true false nullptr NULL\"},d=[r,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,s,a],_={variants:[{begin:/=/,end:/;/},{begin:/\\(/,end:/\\)/},{beginKeywords:\"new throw return else\",end:/;/}],keywords:l,contains:d.concat([{begin:/\\(/,end:/\\)/,keywords:l,contains:d.concat([\"self\"]),relevance:0}]),relevance:0},u={className:\"function\",begin:\"(\"+n+\"[\\\\*&\\\\s]+)+\"+o,returnBegin:!0,end:/[{;=]/,excludeEnd:!0,keywords:l,illegal:/[^\\w\\s\\*&:]/,contains:[{begin:\"decltype\\\\(auto\\\\)\",keywords:l,relevance:0},{begin:o,returnBegin:!0,contains:[c],relevance:0},{className:\"params\",begin:/\\(/,end:/\\)/,keywords:l,relevance:0,contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,a,s,r,{begin:/\\(/,end:/\\)/,keywords:l,relevance:0,contains:[\"self\",e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,a,s,r]}]},r,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,i]};return{aliases:[\"c\",\"cc\",\"h\",\"c++\",\"h++\",\"hpp\",\"hh\",\"hxx\",\"cxx\"],keywords:l,disableAutodetect:!0,illegal:\"\",keywords:l,contains:[\"self\",r]},{begin:e.IDENT_RE+\"::\",keywords:l},{className:\"class\",beginKeywords:\"class struct\",end:/[{;:]/,contains:[{begin://,contains:[\"self\"]},e.TITLE_MODE]}]),exports:{preprocessor:i,strings:a,keywords:l}}}}()); hljs.registerLanguage(\"c\",function(){\"use strict\";return function(e){var n=e.getLanguage(\"c-like\").rawDefinition();return n.name=\"C\",n.aliases=[\"c\",\"h\"],n}}()); hljs.registerLanguage(\"coffeescript\",function(){\"use strict\";return function(e){var n={keyword:\"in if for while finally new do return else break catch instanceof throw try this switch continue typeof delete debugger super yield import export from as default await then unless until loop of by when and or is isnt not\",literal:\"true false null undefined yes no on off\",built_in:\"npm require console print module global window document\"},i=\"[A-Za-z$_][0-9A-Za-z$_]*\",s={className:\"subst\",begin:/#\\{/,end:/}/,keywords:n},a=[e.BINARY_NUMBER_MODE,e.inherit(e.C_NUMBER_MODE,{starts:{end:\"(\\\\s*/)?\",relevance:0}}),{className:\"string\",variants:[{begin:/'''/,end:/'''/,contains:[e.BACKSLASH_ESCAPE]},{begin:/'/,end:/'/,contains:[e.BACKSLASH_ESCAPE]},{begin:/\"\"\"/,end:/\"\"\"/,contains:[e.BACKSLASH_ESCAPE,s]},{begin:/\"/,end:/\"/,contains:[e.BACKSLASH_ESCAPE,s]}]},{className:\"regexp\",variants:[{begin:\"///\",end:\"///\",contains:[s,e.HASH_COMMENT_MODE]},{begin:\"//[gim]{0,3}(?=\\\\W)\",relevance:0},{begin:/\\/(?![ *]).*?(?![\\\\]).\\/[gim]{0,3}(?=\\W)/}]},{begin:\"@\"+i},{subLanguage:\"javascript\",excludeBegin:!0,excludeEnd:!0,variants:[{begin:\"```\",end:\"```\"},{begin:\"`\",end:\"`\"}]}];s.contains=a;var t=e.inherit(e.TITLE_MODE,{begin:i}),r={className:\"params\",begin:\"\\\\([^\\\\(]\",returnBegin:!0,contains:[{begin:/\\(/,end:/\\)/,keywords:n,contains:[\"self\"].concat(a)}]};return{name:\"CoffeeScript\",aliases:[\"coffee\",\"cson\",\"iced\"],keywords:n,illegal:/\\/\\*/,contains:a.concat([e.COMMENT(\"###\",\"###\"),e.HASH_COMMENT_MODE,{className:\"function\",begin:\"^\\\\s*\"+i+\"\\\\s*=\\\\s*(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>\",end:\"[-=]>\",returnBegin:!0,contains:[t,r]},{begin:/[:\\(,=]\\s*/,relevance:0,contains:[{className:\"function\",begin:\"(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>\",end:\"[-=]>\",returnBegin:!0,contains:[r]}]},{className:\"class\",beginKeywords:\"class\",end:\"$\",illegal:/[:=\"\\[\\]]/,contains:[{beginKeywords:\"extends\",endsWithParent:!0,illegal:/[:=\"\\[\\]]/,contains:[t]},t]},{begin:i+\":\",end:\":\",returnBegin:!0,returnEnd:!0,relevance:0}])}}}()); hljs.registerLanguage(\"cpp\",function(){\"use strict\";return function(e){var t=e.getLanguage(\"c-like\").rawDefinition();return t.disableAutodetect=!1,t.name=\"C++\",t.aliases=[\"cc\",\"c++\",\"h++\",\"hpp\",\"hh\",\"hxx\",\"cxx\"],t}}()); hljs.registerLanguage(\"csharp\",function(){\"use strict\";return function(e){var n={keyword:\"abstract as base bool break byte case catch char checked const continue decimal default delegate do double enum event explicit extern finally fixed float for foreach goto if implicit in int interface internal is lock long object operator out override params private protected public readonly ref sbyte sealed short sizeof stackalloc static string struct switch this try typeof uint ulong unchecked unsafe ushort using virtual void volatile while add alias ascending async await by descending dynamic equals from get global group into join let nameof on orderby partial remove select set value var when where yield\",literal:\"null false true\"},i=e.inherit(e.TITLE_MODE,{begin:\"[a-zA-Z](\\\\.?\\\\w)*\"}),a={className:\"number\",variants:[{begin:\"\\\\b(0b[01']+)\"},{begin:\"(-?)\\\\b([\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)(u|U|l|L|ul|UL|f|F|b|B)\"},{begin:\"(-?)(\\\\b0[xX][a-fA-F0-9']+|(\\\\b[\\\\d']+(\\\\.[\\\\d']*)?|\\\\.[\\\\d']+)([eE][-+]?[\\\\d']+)?)\"}],relevance:0},s={className:\"string\",begin:'@\"',end:'\"',contains:[{begin:'\"\"'}]},t=e.inherit(s,{illegal:/\\n/}),l={className:\"subst\",begin:\"{\",end:\"}\",keywords:n},r=e.inherit(l,{illegal:/\\n/}),c={className:\"string\",begin:/\\$\"/,end:'\"',illegal:/\\n/,contains:[{begin:\"},{begin:\"},e.BACKSLASH_ESCAPE,r]},o={className:\"string\",begin:/\\$@\"/,end:'\"',contains:[{begin:\"},{begin:\"},{begin:'\"\"'},l]},g=e.inherit(o,{illegal:/\\n/,contains:[{begin:\"},{begin:\"},{begin:'\"\"'},r]});l.contains=[o,c,s,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,a,e.C_BLOCK_COMMENT_MODE],r.contains=[g,c,t,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,a,e.inherit(e.C_BLOCK_COMMENT_MODE,{illegal:/\\n/})];var d={variants:[o,c,s,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]},E=e.IDENT_RE+\"()?(\\\\[\\\\])?\",_={begin:\"@\"+e.IDENT_RE,relevance:0};return{name:\"C#\",aliases:[\"cs\",\"c#\"],keywords:n,illegal:/::/,contains:[e.COMMENT(\"///\",\"$\",{returnBegin:!0,contains:[{className:\"doctag\",variants:[{begin:\"///\",relevance:0},{begin:\"\\x3c!--|--\\x3e\"},{begin:\"\"}]}]}),e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:\"meta\",begin:\"#\",end:\"$\",keywords:{\"meta-keyword\":\"if else elif endif define undef warning error line region endregion pragma checksum\"}},d,a,{beginKeywords:\"class interface\",end:/[{;=]/,illegal:/[^\\s:,]/,contains:[{beginKeywords:\"where class\"},i,{begin:\"\",keywords:\"in out\"},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{beginKeywords:\"namespace\",end:/[{;=]/,illegal:/[^\\s:]/,contains:[i,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{className:\"meta\",begin:\"^\\\\s*\\\\[\",excludeBegin:!0,end:\"\\\\]\",excludeEnd:!0,contains:[{className:\"meta-string\",begin:/\"/,end:/\"/}]},{beginKeywords:\"new return throw await else\",relevance:0},{className:\"function\",begin:\"(\"+E+\"\\\\s+)+\"+e.IDENT_RE+\"\\\\s*\\\\(\",returnBegin:!0,end:/\\s*[{;=]/,excludeEnd:!0,keywords:n,contains:[{begin:e.IDENT_RE+\"\\\\s*\\\\(\",returnBegin:!0,contains:[e.TITLE_MODE],relevance:0},{className:\"params\",begin:/\\(/,end:/\\)/,excludeBegin:!0,excludeEnd:!0,keywords:n,relevance:0,contains:[d,a,e.C_BLOCK_COMMENT_MODE]},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},_]}}}()); hljs.registerLanguage(\"css\",function(){\"use strict\";return function(e){var n={begin:/(?:[A-Z\\_\\.\\-]+|--[a-zA-Z0-9_-]+)\\s*:/,returnBegin:!0,end:\";\",endsWithParent:!0,contains:[{className:\"attribute\",begin:/\\S/,end:\":\",excludeEnd:!0,starts:{endsWithParent:!0,excludeEnd:!0,contains:[{begin:/[\\w-]+\\(/,returnBegin:!0,contains:[{className:\"built_in\",begin:/[\\w-]+/},{begin:/\\(/,end:/\\)/,contains:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.CSS_NUMBER_MODE]}]},e.CSS_NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,e.C_BLOCK_COMMENT_MODE,{className:\"number\",begin:\"#[0-9A-Fa-f]+\"},{className:\"meta\",begin:\"!important\"}]}}]};return{name:\"CSS\",case_insensitive:!0,illegal:/[=\\/|'\\$]/,contains:[e.C_BLOCK_COMMENT_MODE,{className:\"selector-id\",begin:/#[A-Za-z0-9_-]+/},{className:\"selector-class\",begin:/\\.[A-Za-z0-9_-]+/},{className:\"selector-attr\",begin:/\\[/,end:/\\]/,illegal:\"$\",contains:[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE]},{className:\"selector-pseudo\",begin:/:(:)?[a-zA-Z0-9\\_\\-\\+\\(\\)\"'.]+/},{begin:\"@(page|font-face)\",lexemes:\"@[a-z-]+\",keywords:\"@page @font-face\"},{begin:\"@\",end:\"[{;]\",illegal:/:/,returnBegin:!0,contains:[{className:\"keyword\",begin:/@\\-?\\w[\\w]*(\\-\\w+)*/},{begin:/\\s/,endsWithParent:!0,excludeEnd:!0,relevance:0,keywords:\"and or not only\",contains:[{begin:/[a-z-]+:/,className:\"attribute\"},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.CSS_NUMBER_MODE]}]},{className:\"selector-tag\",begin:\"[a-zA-Z-][a-zA-Z0-9_-]*\",relevance:0},{begin:\"{\",end:\"}\",illegal:/\\S/,contains:[e.C_BLOCK_COMMENT_MODE,n]}]}}}()); hljs.registerLanguage(\"diff\",function(){\"use strict\";return function(e){return{name:\"Diff\",aliases:[\"patch\"],contains:[{className:\"meta\",relevance:10,variants:[{begin:/^@@ +\\-\\d+,\\d+ +\\+\\d+,\\d+ +@@$/},{begin:/^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/},{begin:/^\\-\\-\\- +\\d+,\\d+ +\\-\\-\\-\\-$/}]},{className:\"comment\",variants:[{begin:/Index: /,end:/$/},{begin:/={3,}/,end:/$/},{begin:/^\\-{3}/,end:/$/},{begin:/^\\*{3} /,end:/$/},{begin:/^\\+{3}/,end:/$/},{begin:/^\\*{15}$/}]},{className:\"addition\",begin:\"^\\\\+\",end:\"$\"},{className:\"deletion\",begin:\"^\\\\-\",end:\"$\"},{className:\"addition\",begin:\"^\\\\!\",end:\"$\"}]}}}()); hljs.registerLanguage(\"go\",function(){\"use strict\";return function(e){var n={keyword:\"break default func interface select case map struct chan else goto package switch const fallthrough if range type continue for import return var go defer bool byte complex64 complex128 float32 float64 int8 int16 int32 int64 string uint8 uint16 uint32 uint64 int uint uintptr rune\",literal:\"true false iota nil\",built_in:\"append cap close complex copy imag len make new panic print println real recover delete\"};return{name:\"Go\",aliases:[\"golang\"],keywords:n,illegal:\")?\\\\s+)+\"+e.UNDERSCORE_IDENT_RE+\"\\\\s*\\\\(\",returnBegin:!0,end:/[{;=]/,excludeEnd:!0,keywords:a,contains:[{begin:e.UNDERSCORE_IDENT_RE+\"\\\\s*\\\\(\",returnBegin:!0,relevance:0,contains:[e.UNDERSCORE_TITLE_MODE]},{className:\"params\",begin:/\\(/,end:/\\)/,keywords:a,relevance:0,contains:[n,e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE]},e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]},{className:\"number\",begin:\"\\\\b(0[bB]([01]+[01_]+[01]+|[01]+)|0[xX]([a-fA-F0-9]+[a-fA-F0-9_]+[a-fA-F0-9]+|[a-fA-F0-9]+)|(([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+)(\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+))?|\\\\.([\\\\d]+[\\\\d_]+[\\\\d]+|[\\\\d]+))([eE][-+]?\\\\d+)?)[lLfF]?\",relevance:0},n]}}}()); hljs.registerLanguage(\"javascript\",function(){\"use strict\";return function(e){var n={begin:/|\\/>/},a=\"[A-Za-z$_][0-9A-Za-z$_]*\",s={keyword:\"in of if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const export super debugger as async await static import from as\",literal:\"true false null undefined NaN Infinity\",built_in:\"eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document Symbol Set Map WeakSet WeakMap Proxy Reflect Promise\"},r={className:\"number\",variants:[{begin:\"\\\\b(0[bB][01]+)n?\"},{begin:\"\\\\b(0[oO][0-7]+)n?\"},{begin:e.C_NUMBER_RE+\"n?\"}],relevance:0},i={className:\"subst\",begin:\"\\\\$\\\\{\",end:\"\\\\}\",keywords:s,contains:[]},t={begin:\"html`\",end:\"\",starts:{end:\"`\",returnEnd:!1,contains:[e.BACKSLASH_ESCAPE,i],subLanguage:\"xml\"}},c={begin:\"css`\",end:\"\",starts:{end:\"`\",returnEnd:!1,contains:[e.BACKSLASH_ESCAPE,i],subLanguage:\"css\"}},o={className:\"string\",begin:\"`\",end:\"`\",contains:[e.BACKSLASH_ESCAPE,i]};i.contains=[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,t,c,o,r,e.REGEXP_MODE];var l=i.contains.concat([e.C_BLOCK_COMMENT_MODE,e.C_LINE_COMMENT_MODE]),d={className:\"params\",begin:/\\(/,end:/\\)/,excludeBegin:!0,excludeEnd:!0,contains:l};return{name:\"JavaScript\",aliases:[\"js\",\"jsx\",\"mjs\",\"cjs\"],keywords:s,contains:[{className:\"meta\",relevance:10,begin:/^\\s*['\"]use (strict|asm)['\"]/},{className:\"meta\",begin:/^#!/,end:/$/},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,t,c,o,e.C_LINE_COMMENT_MODE,e.COMMENT(\"/\\\\*\\\\*\",\"\\\\*/\",{relevance:0,contains:[{className:\"doctag\",begin:\"@[A-Za-z]+\",contains:[{className:\"type\",begin:\"\\\\{\",end:\"\\\\}\",relevance:0},{className:\"variable\",begin:a+\"(?=\\\\s*(-)|$)\",endsParent:!0,relevance:0},{begin:/(?=[^\\n])\\s/,relevance:0}]}]}),e.C_BLOCK_COMMENT_MODE,r,{begin:/[{,\\n]\\s*/,relevance:0,contains:[{begin:a+\"\\\\s*:\",returnBegin:!0,relevance:0,contains:[{className:\"attr\",begin:a,relevance:0}]}]},{begin:\"(\"+e.RE_STARTERS_RE+\"|\\\\b(case|return|throw)\\\\b)\\\\s*\",keywords:\"return throw case\",contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.REGEXP_MODE,{className:\"function\",begin:\"(\\\\(.*?\\\\)|\"+a+\")\\\\s*=>\",returnBegin:!0,end:\"\\\\s*=>\",contains:[{className:\"params\",variants:[{begin:a},{begin:/\\(\\s*\\)/},{begin:/\\(/,end:/\\)/,excludeBegin:!0,excludeEnd:!0,keywords:s,contains:l}]}]},{begin:/,/,relevance:0},{className:\"\",begin:/\\s/,end:/\\s*/,skip:!0},{variants:[{begin:\"\",end:\"\"},{begin:n.begin,end:n.end}],subLanguage:\"xml\",contains:[{begin:n.begin,end:n.end,skip:!0,contains:[\"self\"]}]}],relevance:0},{className:\"function\",beginKeywords:\"function\",end:/\\{/,excludeEnd:!0,contains:[e.inherit(e.TITLE_MODE,{begin:a}),d],illegal:/\\[|%/},{begin:/\\$[(.]/},e.METHOD_GUARD,{className:\"class\",beginKeywords:\"class\",end:/[{;=]/,excludeEnd:!0,illegal:/[:\"\\[\\]]/,contains:[{beginKeywords:\"extends\"},e.UNDERSCORE_TITLE_MODE]},{beginKeywords:\"constructor\",end:/\\{/,excludeEnd:!0},{begin:\"(get|set)\\\\s*(?=\"+a+\"\\\\()\",end:/{/,keywords:\"get set\",contains:[e.inherit(e.TITLE_MODE,{begin:a}),{begin:/\\(\\)/},d]}],illegal:/#(?!!)/}}}()); hljs.registerLanguage(\"json\",function(){\"use strict\";return function(n){var e={literal:\"true false null\"},i=[n.C_LINE_COMMENT_MODE,n.C_BLOCK_COMMENT_MODE],t=[n.QUOTE_STRING_MODE,n.C_NUMBER_MODE],a={end:\",\",endsWithParent:!0,excludeEnd:!0,contains:t,keywords:e},l={begin:\"{\",end:\"}\",contains:[{className:\"attr\",begin:/\"/,end:/\"/,contains:[n.BACKSLASH_ESCAPE],illegal:\"\\\\n\"},n.inherit(a,{begin:/:/})].concat(i),illegal:\"\\\\S\"},s={begin:\"\\\\[\",end:\"\\\\]\",contains:[n.inherit(a)],illegal:\"\\\\S\"};return t.push(l,s),i.forEach((function(n){t.push(n)})),{name:\"JSON\",contains:t,keywords:e,illegal:\"\\\\S\"}}}()); hljs.registerLanguage(\"kotlin\",function(){\"use strict\";return function(e){var n={keyword:\"abstract as val var vararg get set class object open private protected public noinline crossinline dynamic final enum if else do while for when throw try catch finally import package is in fun override companion reified inline lateinit init interface annotation data sealed internal infix operator out by constructor super tailrec where const inner suspend typealias external expect actual trait volatile transient native default\",built_in:\"Byte Short Char Int Long Boolean Float Double Void Unit Nothing\",literal:\"true false null\"},a={className:\"symbol\",begin:e.UNDERSCORE_IDENT_RE+\"@\"},i={className:\"subst\",begin:\"\\\\${\",end:\"}\",contains:[e.C_NUMBER_MODE]},s={className:\"variable\",begin:\"\\\\$\"+e.UNDERSCORE_IDENT_RE},t={className:\"string\",variants:[{begin:'\"\"\"',end:'\"\"\"(?=[^\"])',contains:[s,i]},{begin:\"'\",end:\"'\",illegal:/\\n/,contains:[e.BACKSLASH_ESCAPE]},{begin:'\"',end:'\"',illegal:/\\n/,contains:[e.BACKSLASH_ESCAPE,s,i]}]};i.contains.push(t);var r={className:\"meta\",begin:\"@(?:file|property|field|get|set|receiver|param|setparam|delegate)\\\\s*:(?:\\\\s*\"+e.UNDERSCORE_IDENT_RE+\")?\"},l={className:\"meta\",begin:\"@\"+e.UNDERSCORE_IDENT_RE,contains:[{begin:/\\(/,end:/\\)/,contains:[e.inherit(t,{className:\"meta-string\"})]}]},c=e.COMMENT(\"/\\\\*\",\"\\\\*/\",{contains:[e.C_BLOCK_COMMENT_MODE]}),o={variants:[{className:\"type\",begin:e.UNDERSCORE_IDENT_RE},{begin:/\\(/,end:/\\)/,contains:[]}]},d=o;return d.variants[1].contains=[o],o.variants[1].contains=[d],{name:\"Kotlin\",aliases:[\"kt\"],keywords:n,contains:[e.COMMENT(\"/\\\\*\\\\*\",\"\\\\*/\",{relevance:0,contains:[{className:\"doctag\",begin:\"@[A-Za-z]+\"}]}),e.C_LINE_COMMENT_MODE,c,{className:\"keyword\",begin:/\\b(break|continue|return|this)\\b/,starts:{contains:[{className:\"symbol\",begin:/@\\w+/}]}},a,r,l,{className:\"function\",beginKeywords:\"fun\",end:\"[(]|$\",returnBegin:!0,excludeEnd:!0,keywords:n,illegal:/fun\\s+()?[^\\s\\(]+(\\s+[^\\s\\(]+)\\s*=/,relevance:5,contains:[{begin:e.UNDERSCORE_IDENT_RE+\"\\\\s*\\\\(\",returnBegin:!0,relevance:0,contains:[e.UNDERSCORE_TITLE_MODE]},{className:\"type\",begin://,keywords:\"reified\",relevance:0},{className:\"params\",begin:/\\(/,end:/\\)/,endsParent:!0,keywords:n,relevance:0,contains:[{begin:/:/,end:/[=,\\/]/,endsWithParent:!0,contains:[o,e.C_LINE_COMMENT_MODE,c],relevance:0},e.C_LINE_COMMENT_MODE,c,r,l,t,e.C_NUMBER_MODE]},c]},{className:\"class\",beginKeywords:\"class interface trait\",end:/[:\\{(]|$/,excludeEnd:!0,illegal:\"extends implements\",contains:[{beginKeywords:\"public protected internal private constructor\"},e.UNDERSCORE_TITLE_MODE,{className:\"type\",begin://,excludeBegin:!0,excludeEnd:!0,relevance:0},{className:\"type\",begin:/[,:]\\s*/,end:/[|(\\\\w+-)?\\\\d+\\\\.\\\\d+\\\\.\\\\d(p\\\\d+)?[^>]+>)\",starts:{end:\"$\",contains:d}}];return{name:\"Ruby\",aliases:[\"rb\",\"gemspec\",\"podspec\",\"thor\",\"irb\"],keywords:a,illegal:/\\/\\*/,contains:r.concat(g).concat(d)}}}()); hljs.registerLanguage(\"rust\",function(){\"use strict\";return function(e){var n=\"([ui](8|16|32|64|128|size)|f(32|64))?\",t=\"drop i8 i16 i32 i64 i128 isize u8 u16 u32 u64 u128 usize f32 f64 str char bool Box Option Result String Vec Copy Send Sized Sync Drop Fn FnMut FnOnce ToOwned Clone Debug PartialEq PartialOrd Eq Ord AsRef AsMut Into From Default Iterator Extend IntoIterator DoubleEndedIterator ExactSizeIterator SliceConcatExt ToString assert! assert_eq! bitflags! bytes! cfg! col! concat! concat_idents! debug_assert! debug_assert_eq! env! panic! file! format! format_args! include_bin! include_str! line! local_data_key! module_path! option_env! print! println! select! stringify! try! unimplemented! unreachable! vec! write! writeln! macro_rules! assert_ne! debug_assert_ne!\";return{name:\"Rust\",aliases:[\"rs\"],keywords:{keyword:\"abstract as async await become box break const continue crate do dyn else enum extern false final fn for if impl in let loop macro match mod move mut override priv pub ref return self Self static struct super trait true try type typeof unsafe unsized use virtual where while yield\",literal:\"true false Some None Ok Err\",built_in:t},lexemes:e.IDENT_RE+\"!?\",illegal:\"\"}]}}}()); hljs.registerLanguage(\"scss\",function(){\"use strict\";return function(e){var t={className:\"variable\",begin:\"(\\\\$[a-zA-Z-][a-zA-Z0-9_-]*)\\\\b\"},i={className:\"number\",begin:\"#[0-9A-Fa-f]+\"};return e.CSS_NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,e.C_BLOCK_COMMENT_MODE,{name:\"SCSS\",case_insensitive:!0,illegal:\"[=/|']\",contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,{className:\"selector-id\",begin:\"\\\\#[A-Za-z0-9_-]+\",relevance:0},{className:\"selector-class\",begin:\"\\\\.[A-Za-z0-9_-]+\",relevance:0},{className:\"selector-attr\",begin:\"\\\\[\",end:\"\\\\]\",illegal:\"$\"},{className:\"selector-tag\",begin:\"\\\\b(a|abbr|acronym|address|area|article|aside|audio|b|base|big|blockquote|body|br|button|canvas|caption|cite|code|col|colgroup|command|datalist|dd|del|details|dfn|div|dl|dt|em|embed|fieldset|figcaption|figure|footer|form|frame|frameset|(h[1-6])|head|header|hgroup|hr|html|i|iframe|img|input|ins|kbd|keygen|label|legend|li|link|map|mark|meta|meter|nav|noframes|noscript|object|ol|optgroup|option|output|p|param|pre|progress|q|rp|rt|ruby|samp|script|section|select|small|span|strike|strong|style|sub|sup|table|tbody|td|textarea|tfoot|th|thead|time|title|tr|tt|ul|var|video)\\\\b\",relevance:0},{className:\"selector-pseudo\",begin:\":(visited|valid|root|right|required|read-write|read-only|out-range|optional|only-of-type|only-child|nth-of-type|nth-last-of-type|nth-last-child|nth-child|not|link|left|last-of-type|last-child|lang|invalid|indeterminate|in-range|hover|focus|first-of-type|first-line|first-letter|first-child|first|enabled|empty|disabled|default|checked|before|after|active)\"},{className:\"selector-pseudo\",begin:\"::(after|before|choices|first-letter|first-line|repeat-index|repeat-item|selection|value)\"},t,{className:\"attribute\",begin:\"\\\\b(src|z-index|word-wrap|word-spacing|word-break|width|widows|white-space|visibility|vertical-align|unicode-bidi|transition-timing-function|transition-property|transition-duration|transition-delay|transition|transform-style|transform-origin|transform|top|text-underline-position|text-transform|text-shadow|text-rendering|text-overflow|text-indent|text-decoration-style|text-decoration-line|text-decoration-color|text-decoration|text-align-last|text-align|tab-size|table-layout|right|resize|quotes|position|pointer-events|perspective-origin|perspective|page-break-inside|page-break-before|page-break-after|padding-top|padding-right|padding-left|padding-bottom|padding|overflow-y|overflow-x|overflow-wrap|overflow|outline-width|outline-style|outline-offset|outline-color|outline|orphans|order|opacity|object-position|object-fit|normal|none|nav-up|nav-right|nav-left|nav-index|nav-down|min-width|min-height|max-width|max-height|mask|marks|margin-top|margin-right|margin-left|margin-bottom|margin|list-style-type|list-style-position|list-style-image|list-style|line-height|letter-spacing|left|justify-content|initial|inherit|ime-mode|image-orientation|image-resolution|image-rendering|icon|hyphens|height|font-weight|font-variant-ligatures|font-variant|font-style|font-stretch|font-size-adjust|font-size|font-language-override|font-kerning|font-feature-settings|font-family|font|float|flex-wrap|flex-shrink|flex-grow|flex-flow|flex-direction|flex-basis|flex|filter|empty-cells|display|direction|cursor|counter-reset|counter-increment|content|column-width|column-span|column-rule-width|column-rule-style|column-rule-color|column-rule|column-gap|column-fill|column-count|columns|color|clip-path|clip|clear|caption-side|break-inside|break-before|break-after|box-sizing|box-shadow|box-decoration-break|bottom|border-width|border-top-width|border-top-style|border-top-right-radius|border-top-left-radius|border-top-color|border-top|border-style|border-spacing|border-right-width|border-right-style|border-right-color|border-right|border-radius|border-left-width|border-left-style|border-left-color|border-left|border-image-width|border-image-source|border-image-slice|border-image-repeat|border-image-outset|border-image|border-color|border-collapse|border-bottom-width|border-bottom-style|border-bottom-right-radius|border-bottom-left-radius|border-bottom-color|border-bottom|border|background-size|background-repeat|background-position|background-origin|background-image|background-color|background-clip|background-attachment|background-blend-mode|background|backface-visibility|auto|animation-timing-function|animation-play-state|animation-name|animation-iteration-count|animation-fill-mode|animation-duration|animation-direction|animation-delay|animation|align-self|align-items|align-content)\\\\b\",illegal:\"[^\\\\s]\"},{begin:\"\\\\b(whitespace|wait|w-resize|visible|vertical-text|vertical-ideographic|uppercase|upper-roman|upper-alpha|underline|transparent|top|thin|thick|text|text-top|text-bottom|tb-rl|table-header-group|table-footer-group|sw-resize|super|strict|static|square|solid|small-caps|separate|se-resize|scroll|s-resize|rtl|row-resize|ridge|right|repeat|repeat-y|repeat-x|relative|progress|pointer|overline|outside|outset|oblique|nowrap|not-allowed|normal|none|nw-resize|no-repeat|no-drop|newspaper|ne-resize|n-resize|move|middle|medium|ltr|lr-tb|lowercase|lower-roman|lower-alpha|loose|list-item|line|line-through|line-edge|lighter|left|keep-all|justify|italic|inter-word|inter-ideograph|inside|inset|inline|inline-block|inherit|inactive|ideograph-space|ideograph-parenthesis|ideograph-numeric|ideograph-alpha|horizontal|hidden|help|hand|groove|fixed|ellipsis|e-resize|double|dotted|distribute|distribute-space|distribute-letter|distribute-all-lines|disc|disabled|default|decimal|dashed|crosshair|collapse|col-resize|circle|char|center|capitalize|break-word|break-all|bottom|both|bolder|bold|block|bidi-override|below|baseline|auto|always|all-scroll|absolute|table|table-cell)\\\\b\"},{begin:\":\",end:\";\",contains:[t,i,e.CSS_NUMBER_MODE,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,{className:\"meta\",begin:\"!important\"}]},{begin:\"@(page|font-face)\",lexemes:\"@[a-z-]+\",keywords:\"@page @font-face\"},{begin:\"@\",end:\"[{;]\",returnBegin:!0,keywords:\"and or not only\",contains:[{begin:\"@[a-z-]+\",className:\"keyword\"},t,e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,i,e.CSS_NUMBER_MODE]}]}}}()); hljs.registerLanguage(\"shell\",function(){\"use strict\";return function(s){return{name:\"Shell Session\",aliases:[\"console\"],contains:[{className:\"meta\",begin:\"^\\\\s{0,3}[/\\\\w\\\\d\\\\[\\\\]()@-]*[>%$#]\",starts:{end:\"$\",subLanguage:\"bash\"}}]}}}()); hljs.registerLanguage(\"sql\",function(){\"use strict\";return function(e){var t=e.COMMENT(\"--\",\"$\");return{name:\"SQL\",case_insensitive:!0,illegal:/[{}*]/,contains:[{beginKeywords:\"begin end start commit rollback savepoint lock alter create drop rename call delete do handler insert load replace select truncate update set show pragma grant merge describe use explain help declare prepare execute deallocate release unlock purge reset change stop analyze cache flush optimize repair kill install uninstall checksum restore check backup revoke comment values with\",end:/;/,endsWithParent:!0,lexemes:/[\\w\\.]+/,keywords:{keyword:\"as abort abs absolute acc acce accep accept access accessed accessible account acos action activate add addtime admin administer advanced advise aes_decrypt aes_encrypt after agent aggregate ali alia alias all allocate allow alter always analyze ancillary and anti any anydata anydataset anyschema anytype apply archive archived archivelog are as asc ascii asin assembly assertion associate asynchronous at atan atn2 attr attri attrib attribu attribut attribute attributes audit authenticated authentication authid authors auto autoallocate autodblink autoextend automatic availability avg backup badfile basicfile before begin beginning benchmark between bfile bfile_base big bigfile bin binary_double binary_float binlog bit_and bit_count bit_length bit_or bit_xor bitmap blob_base block blocksize body both bound bucket buffer_cache buffer_pool build bulk by byte byteordermark bytes cache caching call calling cancel capacity cascade cascaded case cast catalog category ceil ceiling chain change changed char_base char_length character_length characters characterset charindex charset charsetform charsetid check checksum checksum_agg child choose chr chunk class cleanup clear client clob clob_base clone close cluster_id cluster_probability cluster_set clustering coalesce coercibility col collate collation collect colu colum column column_value columns columns_updated comment commit compact compatibility compiled complete composite_limit compound compress compute concat concat_ws concurrent confirm conn connec connect connect_by_iscycle connect_by_isleaf connect_by_root connect_time connection consider consistent constant constraint constraints constructor container content contents context contributors controlfile conv convert convert_tz corr corr_k corr_s corresponding corruption cos cost count count_big counted covar_pop covar_samp cpu_per_call cpu_per_session crc32 create creation critical cross cube cume_dist curdate current current_date current_time current_timestamp current_user cursor curtime customdatum cycle data database databases datafile datafiles datalength date_add date_cache date_format date_sub dateadd datediff datefromparts datename datepart datetime2fromparts day day_to_second dayname dayofmonth dayofweek dayofyear days db_role_change dbtimezone ddl deallocate declare decode decompose decrement decrypt deduplicate def defa defau defaul default defaults deferred defi defin define degrees delayed delegate delete delete_all delimited demand dense_rank depth dequeue des_decrypt des_encrypt des_key_file desc descr descri describ describe descriptor deterministic diagnostics difference dimension direct_load directory disable disable_all disallow disassociate discardfile disconnect diskgroup distinct distinctrow distribute distributed div do document domain dotnet double downgrade drop dumpfile duplicate duration each edition editionable editions element ellipsis else elsif elt empty enable enable_all enclosed encode encoding encrypt end end-exec endian enforced engine engines enqueue enterprise entityescaping eomonth error errors escaped evalname evaluate event eventdata events except exception exceptions exchange exclude excluding execu execut execute exempt exists exit exp expire explain explode export export_set extended extent external external_1 external_2 externally extract failed failed_login_attempts failover failure far fast feature_set feature_value fetch field fields file file_name_convert filesystem_like_logging final finish first first_value fixed flash_cache flashback floor flush following follows for forall force foreign form forma format found found_rows freelist freelists freepools fresh from from_base64 from_days ftp full function general generated get get_format get_lock getdate getutcdate global global_name globally go goto grant grants greatest group group_concat group_id grouping grouping_id groups gtid_subtract guarantee guard handler hash hashkeys having hea head headi headin heading heap help hex hierarchy high high_priority hosts hour hours http id ident_current ident_incr ident_seed identified identity idle_time if ifnull ignore iif ilike ilm immediate import in include including increment index indexes indexing indextype indicator indices inet6_aton inet6_ntoa inet_aton inet_ntoa infile initial initialized initially initrans inmemory inner innodb input insert install instance instantiable instr interface interleaved intersect into invalidate invisible is is_free_lock is_ipv4 is_ipv4_compat is_not is_not_null is_used_lock isdate isnull isolation iterate java join json json_exists keep keep_duplicates key keys kill language large last last_day last_insert_id last_value lateral lax lcase lead leading least leaves left len lenght length less level levels library like like2 like4 likec limit lines link list listagg little ln load load_file lob lobs local localtime localtimestamp locate locator lock locked log log10 log2 logfile logfiles logging logical logical_reads_per_call logoff logon logs long loop low low_priority lower lpad lrtrim ltrim main make_set makedate maketime managed management manual map mapping mask master master_pos_wait match matched materialized max maxextents maximize maxinstances maxlen maxlogfiles maxloghistory maxlogmembers maxsize maxtrans md5 measures median medium member memcompress memory merge microsecond mid migration min minextents minimum mining minus minute minutes minvalue missing mod mode model modification modify module monitoring month months mount move movement multiset mutex name name_const names nan national native natural nav nchar nclob nested never new newline next nextval no no_write_to_binlog noarchivelog noaudit nobadfile nocheck nocompress nocopy nocycle nodelay nodiscardfile noentityescaping noguarantee nokeep nologfile nomapping nomaxvalue nominimize nominvalue nomonitoring none noneditionable nonschema noorder nopr nopro noprom nopromp noprompt norely noresetlogs noreverse normal norowdependencies noschemacheck noswitch not nothing notice notnull notrim novalidate now nowait nth_value nullif nulls num numb numbe nvarchar nvarchar2 object ocicoll ocidate ocidatetime ociduration ociinterval ociloblocator ocinumber ociref ocirefcursor ocirowid ocistring ocitype oct octet_length of off offline offset oid oidindex old on online only opaque open operations operator optimal optimize option optionally or oracle oracle_date oradata ord ordaudio orddicom orddoc order ordimage ordinality ordvideo organization orlany orlvary out outer outfile outline output over overflow overriding package pad parallel parallel_enable parameters parent parse partial partition partitions pascal passing password password_grace_time password_lock_time password_reuse_max password_reuse_time password_verify_function patch path patindex pctincrease pctthreshold pctused pctversion percent percent_rank percentile_cont percentile_disc performance period period_add period_diff permanent physical pi pipe pipelined pivot pluggable plugin policy position post_transaction pow power pragma prebuilt precedes preceding precision prediction prediction_cost prediction_details prediction_probability prediction_set prepare present preserve prior priority private private_sga privileges procedural procedure procedure_analyze processlist profiles project prompt protection public publishingservername purge quarter query quick quiesce quota quotename radians raise rand range rank raw read reads readsize rebuild record records recover recovery recursive recycle redo reduced ref reference referenced references referencing refresh regexp_like register regr_avgx regr_avgy regr_count regr_intercept regr_r2 regr_slope regr_sxx regr_sxy reject rekey relational relative relaylog release release_lock relies_on relocate rely rem remainder rename repair repeat replace replicate replication required reset resetlogs resize resource respect restore restricted result result_cache resumable resume retention return returning returns reuse reverse revoke right rlike role roles rollback rolling rollup round row row_count rowdependencies rowid rownum rows rtrim rules safe salt sample save savepoint sb1 sb2 sb4 scan schema schemacheck scn scope scroll sdo_georaster sdo_topo_geometry search sec_to_time second seconds section securefile security seed segment select self semi sequence sequential serializable server servererror session session_user sessions_per_user set sets settings sha sha1 sha2 share shared shared_pool short show shrink shutdown si_averagecolor si_colorhistogram si_featurelist si_positionalcolor si_stillimage si_texture siblings sid sign sin size size_t sizes skip slave sleep smalldatetimefromparts smallfile snapshot some soname sort soundex source space sparse spfile split sql sql_big_result sql_buffer_result sql_cache sql_calc_found_rows sql_small_result sql_variant_property sqlcode sqldata sqlerror sqlname sqlstate sqrt square standalone standby start starting startup statement static statistics stats_binomial_test stats_crosstab stats_ks_test stats_mode stats_mw_test stats_one_way_anova stats_t_test_ stats_t_test_indep stats_t_test_one stats_t_test_paired stats_wsr_test status std stddev stddev_pop stddev_samp stdev stop storage store stored str str_to_date straight_join strcmp strict string struct stuff style subdate subpartition subpartitions substitutable substr substring subtime subtring_index subtype success sum suspend switch switchoffset switchover sync synchronous synonym sys sys_xmlagg sysasm sysaux sysdate sysdatetimeoffset sysdba sysoper system system_user sysutcdatetime table tables tablespace tablesample tan tdo template temporary terminated tertiary_weights test than then thread through tier ties time time_format time_zone timediff timefromparts timeout timestamp timestampadd timestampdiff timezone_abbr timezone_minute timezone_region to to_base64 to_date to_days to_seconds todatetimeoffset trace tracking transaction transactional translate translation treat trigger trigger_nestlevel triggers trim truncate try_cast try_convert try_parse type ub1 ub2 ub4 ucase unarchived unbounded uncompress under undo unhex unicode uniform uninstall union unique unix_timestamp unknown unlimited unlock unnest unpivot unrecoverable unsafe unsigned until untrusted unusable unused update updated upgrade upped upper upsert url urowid usable usage use use_stored_outlines user user_data user_resources users using utc_date utc_timestamp uuid uuid_short validate validate_password_strength validation valist value values var var_samp varcharc vari varia variab variabl variable variables variance varp varraw varrawc varray verify version versions view virtual visible void wait wallet warning warnings week weekday weekofyear wellformed when whene whenev wheneve whenever where while whitespace window with within without work wrapped xdb xml xmlagg xmlattributes xmlcast xmlcolattval xmlelement xmlexists xmlforest xmlindex xmlnamespaces xmlpi xmlquery xmlroot xmlschema xmlserialize xmltable xmltype xor year year_to_month years yearweek\",literal:\"true false null unknown\",built_in:\"array bigint binary bit blob bool boolean char character date dec decimal float int int8 integer interval number numeric real record serial serial8 smallint text time timestamp tinyint varchar varchar2 varying void\"},contains:[{className:\"string\",begin:\"'\",end:\"'\",contains:[{begin:\"''\"}]},{className:\"string\",begin:'\"',end:'\"',contains:[{begin:'\"\"'}]},{className:\"string\",begin:\"`\",end:\"`\"},e.C_NUMBER_MODE,e.C_BLOCK_COMMENT_MODE,t,e.HASH_COMMENT_MODE]},e.C_BLOCK_COMMENT_MODE,t,e.HASH_COMMENT_MODE]}}}()); hljs.registerLanguage(\"swift\",function(){\"use strict\";return function(e){var i={keyword:\"#available #colorLiteral #column #else #elseif #endif #file #fileLiteral #function #if #imageLiteral #line #selector #sourceLocation _ __COLUMN__ __FILE__ __FUNCTION__ __LINE__ Any as as! as? associatedtype associativity break case catch class continue convenience default defer deinit didSet do dynamic dynamicType else enum extension fallthrough false fileprivate final for func get guard if import in indirect infix init inout internal is lazy left let mutating nil none nonmutating open operator optional override postfix precedence prefix private protocol Protocol public repeat required rethrows return right self Self set static struct subscript super switch throw throws true try try! try? Type typealias unowned var weak where while willSet\",literal:\"true false nil\",built_in:\"abs advance alignof alignofValue anyGenerator assert assertionFailure bridgeFromObjectiveC bridgeFromObjectiveCUnconditional bridgeToObjectiveC bridgeToObjectiveCUnconditional c compactMap contains count countElements countLeadingZeros debugPrint debugPrintln distance dropFirst dropLast dump encodeBitsAsWords enumerate equal fatalError filter find getBridgedObjectiveCType getVaList indices insertionSort isBridgedToObjectiveC isBridgedVerbatimToObjectiveC isUniquelyReferenced isUniquelyReferencedNonObjC join lazy lexicographicalCompare map max maxElement min minElement numericCast overlaps partition posix precondition preconditionFailure print println quickSort readLine reduce reflect reinterpretCast reverse roundUpToAlignment sizeof sizeofValue sort split startsWith stride strideof strideofValue swap toString transcode underestimateCount unsafeAddressOf unsafeBitCast unsafeDowncast unsafeUnwrap unsafeReflect withExtendedLifetime withObjectAtPlusZero withUnsafePointer withUnsafePointerToObject withUnsafeMutablePointer withUnsafeMutablePointers withUnsafePointer withUnsafePointers withVaList zip\"},n=e.COMMENT(\"/\\\\*\",\"\\\\*/\",{contains:[\"self\"]}),t={className:\"subst\",begin:/\\\\\\(/,end:\"\\\\)\",keywords:i,contains:[]},a={className:\"string\",contains:[e.BACKSLASH_ESCAPE,t],variants:[{begin:/\"\"\"/,end:/\"\"\"/},{begin:/\"/,end:/\"/}]},r={className:\"number\",begin:\"\\\\b([\\\\d_]+(\\\\.[\\\\deE_]+)?|0x[a-fA-F0-9_]+(\\\\.[a-fA-F0-9p_]+)?|0b[01_]+|0o[0-7_]+)\\\\b\",relevance:0};return t.contains=[r],{name:\"Swift\",keywords:i,contains:[a,e.C_LINE_COMMENT_MODE,n,{className:\"type\",begin:\"\\\\b[A-Z][\\\\wÀ-ʸ']*[!?]\"},{className:\"type\",begin:\"\\\\b[A-Z][\\\\wÀ-ʸ']*\",relevance:0},r,{className:\"function\",beginKeywords:\"func\",end:\"{\",excludeEnd:!0,contains:[e.inherit(e.TITLE_MODE,{begin:/[A-Za-z$_][0-9A-Za-z$_]*/}),{begin://},{className:\"params\",begin:/\\(/,end:/\\)/,endsParent:!0,keywords:i,contains:[\"self\",r,a,e.C_BLOCK_COMMENT_MODE,{begin:\":\"}],illegal:/[\"']/}],illegal:/\\[|%/},{className:\"class\",beginKeywords:\"struct protocol class extension enum\",keywords:i,end:\"\\\\{\",excludeEnd:!0,contains:[e.inherit(e.TITLE_MODE,{begin:/[A-Za-z$_][\\u00C0-\\u02B80-9A-Za-z$_]*/})]},{className:\"meta\",begin:\"(@discardableResult|@warn_unused_result|@exported|@lazy|@noescape|@NSCopying|@NSManaged|@objc|@objcMembers|@convention|@required|@noreturn|@IBAction|@IBDesignable|@IBInspectable|@IBOutlet|@infix|@prefix|@postfix|@autoclosure|@testable|@available|@nonobjc|@NSApplicationMain|@UIApplicationMain|@dynamicMemberLookup|@propertyWrapper)\"},{beginKeywords:\"import\",end:/$/,contains:[e.C_LINE_COMMENT_MODE,n]}]}}}()); hljs.registerLanguage(\"typescript\",function(){\"use strict\";return function(e){var n={keyword:\"in if for while finally var new function do return void else break catch instanceof with throw case default try this switch continue typeof delete let yield const class public private protected get set super static implements enum export import declare type namespace abstract as from extends async await\",literal:\"true false null undefined NaN Infinity\",built_in:\"eval isFinite isNaN parseFloat parseInt decodeURI decodeURIComponent encodeURI encodeURIComponent escape unescape Object Function Boolean Error EvalError InternalError RangeError ReferenceError StopIteration SyntaxError TypeError URIError Number Math Date String RegExp Array Float32Array Float64Array Int16Array Int32Array Int8Array Uint16Array Uint32Array Uint8Array Uint8ClampedArray ArrayBuffer DataView JSON Intl arguments require module console window document any number boolean string void Promise\"},r={className:\"meta\",begin:\"@[A-Za-z$_][0-9A-Za-z$_]*\"},a={begin:\"\\\\(\",end:/\\)/,keywords:n,contains:[\"self\",e.QUOTE_STRING_MODE,e.APOS_STRING_MODE,e.NUMBER_MODE]},t={className:\"params\",begin:/\\(/,end:/\\)/,excludeBegin:!0,excludeEnd:!0,keywords:n,contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,r,a]},s={className:\"number\",variants:[{begin:\"\\\\b(0[bB][01]+)n?\"},{begin:\"\\\\b(0[oO][0-7]+)n?\"},{begin:e.C_NUMBER_RE+\"n?\"}],relevance:0},i={className:\"subst\",begin:\"\\\\$\\\\{\",end:\"\\\\}\",keywords:n,contains:[]},o={begin:\"html`\",end:\"\",starts:{end:\"`\",returnEnd:!1,contains:[e.BACKSLASH_ESCAPE,i],subLanguage:\"xml\"}},c={begin:\"css`\",end:\"\",starts:{end:\"`\",returnEnd:!1,contains:[e.BACKSLASH_ESCAPE,i],subLanguage:\"css\"}},E={className:\"string\",begin:\"`\",end:\"`\",contains:[e.BACKSLASH_ESCAPE,i]};return i.contains=[e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,o,c,E,s,e.REGEXP_MODE],{name:\"TypeScript\",aliases:[\"ts\"],keywords:n,contains:[{className:\"meta\",begin:/^\\s*['\"]use strict['\"]/},e.APOS_STRING_MODE,e.QUOTE_STRING_MODE,o,c,E,e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,s,{begin:\"(\"+e.RE_STARTERS_RE+\"|\\\\b(case|return|throw)\\\\b)\\\\s*\",keywords:\"return throw case\",contains:[e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE,e.REGEXP_MODE,{className:\"function\",begin:\"(\\\\(.*?\\\\)|\"+e.IDENT_RE+\")\\\\s*=>\",returnBegin:!0,end:\"\\\\s*=>\",contains:[{className:\"params\",variants:[{begin:e.IDENT_RE},{begin:/\\(\\s*\\)/},{begin:/\\(/,end:/\\)/,excludeBegin:!0,excludeEnd:!0,keywords:n,contains:[\"self\",e.C_LINE_COMMENT_MODE,e.C_BLOCK_COMMENT_MODE]}]}]}],relevance:0},{className:\"function\",beginKeywords:\"function\",end:/[\\{;]/,excludeEnd:!0,keywords:n,contains:[\"self\",e.inherit(e.TITLE_MODE,{begin:\"[A-Za-z$_][0-9A-Za-z$_]*\"}),t],illegal:/%/,relevance:0},{beginKeywords:\"constructor\",end:/[\\{;]/,excludeEnd:!0,contains:[\"self\",t]},{begin:/module\\./,keywords:{built_in:\"module\"},relevance:0},{beginKeywords:\"module\",end:/\\{/,excludeEnd:!0},{beginKeywords:\"interface\",end:/\\{/,excludeEnd:!0,keywords:\"interface extends\"},{begin:/\\$[(.]/},{begin:\"\\\\.\"+e.IDENT_RE,relevance:0},r,a]}}}()); hljs.registerLanguage(\"yaml\",function(){\"use strict\";return function(e){var n={className:\"string\",relevance:0,variants:[{begin:/'/,end:/'/},{begin:/\"/,end:/\"/},{begin:/\\S+/}],contains:[e.BACKSLASH_ESCAPE,{className:\"template-variable\",variants:[{begin:\",end:\"},{begin:\"%{\",end:\"}\"}]}]};return{name:\"YAML\",case_insensitive:!0,aliases:[\"yml\",\"YAML\"],contains:[{className:\"attr\",variants:[{begin:\"\\\\w[\\\\w :\\\\/.-]*:(?=[ \\t]|$)\"},{begin:'\"\\\\w[\\\\w :\\\\/.-]*\":(?=[ \\t]|$)'},{begin:\"'\\\\w[\\\\w :\\\\/.-]*':(?=[ \\t]|$)\"}]},{className:\"meta\",begin:\"^---s*$\",relevance:10},{className:\"string\",begin:\"[\\\\|>]([0-9]?[+-])?[ ]*\\\\n( *)[\\\\S ]+\\\\n(\\\\2[\\\\S ]+\\\\n?)*\"},{begin:\"\",subLanguage:\"ruby\",excludeBegin:!0,excludeEnd:!0,relevance:0},{className:\"type\",begin:\"!\"+e.UNDERSCORE_IDENT_RE},{className:\"type\",begin:\"!!\"+e.UNDERSCORE_IDENT_RE},{className:\"meta\",begin:\"&\"+e.UNDERSCORE_IDENT_RE+\"$\"},{className:\"meta\",begin:\"\\\\*\"+e.UNDERSCORE_IDENT_RE+\"$\"},{className:\"bullet\",begin:\"\\\\-(?=[ ]|$)\",relevance:0},e.HASH_COMMENT_MODE,{beginKeywords:\"true false yes no null\",keywords:{literal:\"true false yes no null\"}},{className:\"number\",begin:\"\\\\b[0-9]{4}(-[0-9][0-9]){0,2}([Tt \\\\t][0-9][0-9]?(:[0-9][0-9]){2})?(\\\\.[0-9]*)?([ \\\\t])*(Z|[-+][0-9][0-9]?(:[0-9][0-9])?)?\\\\b\"},{className:\"number\",begin:e.C_NUMBER_RE+\"\\\\b\"},n]}}}());"}],"posts":[{"title":"Java文件操作","slug":"java/Java文件操作","date":"2020-06-10T16:00:00.000Z","updated":"2020-06-11T08:50:42.120Z","comments":true,"path":"2020/06/11/java/Java文件操作/","link":"","permalink":"http://yanhui2018.gitee.io/2020/06/11/java/Java%E6%96%87%E4%BB%B6%E6%93%8D%E4%BD%9C/","excerpt":"","text":"[TOC] 测试准备private Path fileHomePath; @Before public void before() { fileHomePath = Paths.get(&quot;d:/test&quot;); } 创建目录@Test public void createDir() throws IOException { Path path = Files.createDirectories(fileHomePath.resolve(String.format(&quot;dir%s&quot;, System.currentTimeMillis()))); System.out.println(String.format(&quot;目录%s创建成功&quot;, path)); } 创建文件@Test public void createFileOnPath() throws IOException { Path dirPath = Files.createDirectories(fileHomePath.resolve(String.format(&quot;dir%s&quot;, System.currentTimeMillis()))); Path filePath = Files.createFile(dirPath.resolve(&quot;test.txt&quot;)); System.out.println(String.format(&quot;文件%s创建成功&quot;, filePath)); } 创建文件并写入内容@Test public void createFile() throws IOException { Path filePath = fileHomePath.resolve(&quot;hello.txt&quot;); if (!Files.exists(filePath)) { // 文件不存在 Files.createFile(filePath); } // 向文件写入内容 File file = new File(filePath.toUri()); try (FileOutputStream fileOutputStream = new FileOutputStream(file);) { fileOutputStream.write(&quot;hello...&quot;.getBytes()); } } 向文件追加内容@Test public void writeFile() throws IOException { Path filePath = fileHomePath.resolve(&quot;hello.txt&quot;); Files.write( filePath, String.format(&quot;now:%s#&quot;, System.currentTimeMillis()).getBytes(), StandardOpenOption.APPEND, StandardOpenOption.CREATE); } 删除文件@Test public void deleteFile() throws IOException { Path filePath = fileHomePath.resolve(&quot;hello.txt&quot;); Files.deleteIfExists(filePath); } 遍历文件夹@Test public void list() throws IOException { try ( Stream&lt;Path&gt; pathStream = Files.list(fileHomePath) ) { pathStream.forEach(System.out::println); } } 递归遍历文件夹 递归遍历文件夹，找到匹配内容的文件 @Test public void findMatchFile() throws IOException { final String key = &quot;hello&quot;; try ( Stream&lt;Path&gt; pathStream = Files.find( fileHomePath, 10, (path, fileAttributes) -&gt; { if (Files.isDirectory(path)) return false; try { String txt = new String(Files.readAllBytes(path)); if (StringUtils.contains(txt, key)) { return true; } } catch (IOException e) { e.printStackTrace(); } return false; } ) ) { pathStream.forEach(System.out::println); } }","categories":[{"name":"java","slug":"java","permalink":"http://yanhui2018.gitee.io/categories/java/"}],"tags":[{"name":"java8","slug":"java8","permalink":"http://yanhui2018.gitee.io/tags/java8/"},{"name":"files","slug":"files","permalink":"http://yanhui2018.gitee.io/tags/files/"}]},{"title":"Lombok","slug":"java/Lombok","date":"2020-06-09T16:00:00.000Z","updated":"2020-06-11T08:54:05.936Z","comments":true,"path":"2020/06/10/java/Lombok/","link":"","permalink":"http://yanhui2018.gitee.io/2020/06/10/java/Lombok/","excerpt":"","text":"提供了一组注解，用于消除java类中的大量样板代码，解放生产力 [TOC] 引入lombok&lt;dependency&gt; &lt;groupId&gt;org.projectlombok&lt;/groupId&gt; &lt;artifactId&gt;lombok&lt;/artifactId&gt; &lt;version&gt;...&lt;/version&gt; &lt;/dependency&gt; 在IDEA中使用安装插件市场提供的lombok插件即可 image-20200525144558885 @Getter/@Setter自动添加get/set方法 源代码 package com.ccbft.antigoods.stock; import lombok.Getter; import lombok.Setter; @Getter @Setter public class Person { // 姓名 String name; // 性别 String sex; // 年纪 Integer age; // 工资 Integer salary; } 编译后 // // Source code recreated from a .class file by IntelliJ IDEA // (powered by Fernflower decompiler) // package com.ccbft.antigoods.stock; public class Person { String name; String sex; Integer age; Integer salary; public Person() { } public String getName() { return this.name; } public String getSex() { return this.sex; } public Integer getAge() { return this.age; } public Integer getSalary() { return this.salary; } public void setName(final String name) { this.name = name; } public void setSex(final String sex) { this.sex = sex; } public void setAge(final Integer age) { this.age = age; } public void setSalary(final Integer salary) { this.salary = salary; } } @ToString自动给当前类生成toString()方法 源代码 package com.ccbft.antigoods.stock; import lombok.ToString; @ToString public class Person { // 姓名 String name; // 性别 String sex; // 年纪 Integer age; // 工资 Integer salary; } 编译后 // // Source code recreated from a .class file by IntelliJ IDEA // (powered by Fernflower decompiler) // package com.ccbft.antigoods.stock; public class Person { String name; String sex; Integer age; Integer salary; public Person() { } public String toString() { return &quot;Person(name=&quot; + this.name + &quot;, sex=&quot; + this.sex + &quot;, age=&quot; + this.age + &quot;, salary=&quot; + this.salary + &quot;)&quot;; } } @EqualsAndHashCode覆盖默认的equals()和hashCode()方法 源代码 package com.ccbft.antigoods.stock; import lombok.EqualsAndHashCode; @EqualsAndHashCode public class Person { // 姓名 String name; // 性别 String sex; // 年纪 Integer age; // 工资 Integer salary; } 编译后 // // Source code recreated from a .class file by IntelliJ IDEA // (powered by Fernflower decompiler) // package com.ccbft.antigoods.stock; public class Person { String name; String sex; Integer age; Integer salary; public Person() { } public boolean equals(final Object o) { if (o == this) { return true; } else if (!(o instanceof Person)) { return false; } else { Person other = (Person)o; if (!other.canEqual(this)) { return false; } else { label59: { Object this$name = this.name; Object other$name = other.name; if (this$name == null) { if (other$name == null) { break label59; } } else if (this$name.equals(other$name)) { break label59; } return false; } Object this$sex = this.sex; Object other$sex = other.sex; if (this$sex == null) { if (other$sex != null) { return false; } } else if (!this$sex.equals(other$sex)) { return false; } Object this$age = this.age; Object other$age = other.age; if (this$age == null) { if (other$age != null) { return false; } } else if (!this$age.equals(other$age)) { return false; } Object this$salary = this.salary; Object other$salary = other.salary; if (this$salary == null) { if (other$salary != null) { return false; } } else if (!this$salary.equals(other$salary)) { return false; } return true; } } } protected boolean canEqual(final Object other) { return other instanceof Person; } public int hashCode() { int PRIME = true; int result = 1; Object $name = this.name; int result = result * 59 + ($name == null ? 43 : $name.hashCode()); Object $sex = this.sex; result = result * 59 + ($sex == null ? 43 : $sex.hashCode()); Object $age = this.age; result = result * 59 + ($age == null ? 43 : $age.hashCode()); Object $salary = this.salary; result = result * 59 + ($salary == null ? 43 : $salary.hashCode()); return result; } } @AllArgsConstructor生成带所有字段的构造函数 源代码 package com.ccbft.antigoods.stock; import lombok.AllArgsConstructor; @AllArgsConstructor public class Person { // 姓名 private String name; // 性别 private String sex; // 年纪 private Integer age; // 工资 private Integer salary; } 编译后 // // Source code recreated from a .class file by IntelliJ IDEA // (powered by Fernflower decompiler) // package com.ccbft.antigoods.stock; public class Person { private String name; private String sex; private Integer age; private Integer salary; public Person(final String name, final String sex, final Integer age, final Integer salary) { this.name = name; this.sex = sex; this.age = age; this.salary = salary; } } @NonNull作用于成员变量和方法参数，标识不能为空，否则抛出空指针异常 源代码 package com.ccbft.antigoods.stock; import lombok.AllArgsConstructor; import lombok.NonNull; @AllArgsConstructor public class Person { // 姓名 @NonNull private String name; // 性别 private String sex; // 年纪 private Integer age; // 工资 private Integer salary; } 编译后 // // Source code recreated from a .class file by IntelliJ IDEA // (powered by Fernflower decompiler) // package com.ccbft.antigoods.stock; import lombok.NonNull; public class Person { @NonNull private String name; private String sex; private Integer age; private Integer salary; public Person(@NonNull final String name, final String sex, final Integer age, final Integer salary) { if (name == null) { throw new NullPointerException(&quot;name&quot;); } else { this.name = name; this.sex = sex; this.age = age; this.salary = salary; } } } @RequiredArgsConstructor生成包含final修饰和@NonNull注解字段的构造函数 源代码 package com.ccbft.antigoods.stock; import lombok.NonNull; import lombok.RequiredArgsConstructor; @RequiredArgsConstructor public class Person { // 姓名 private final String name; // 性别 @NonNull private String sex; // 年纪 private Integer age; // 工资 private Integer salary; } 编译后 // // Source code recreated from a .class file by IntelliJ IDEA // (powered by Fernflower decompiler) // package com.ccbft.antigoods.stock; import lombok.NonNull; public class Person { private final String name; @NonNull private String sex; private Integer age; private Integer salary; public Person(final String name, @NonNull final String sex) { if (sex == null) { throw new NullPointerException(&quot;sex&quot;); } else { this.name = name; this.sex = sex; } } } @Data是以下注解功能的集合@ToString @EqualsAndHashCode @Getter @Setter @RequiredArgsConstructor 源代码 package com.ccbft.antigoods.stock; import lombok.Data; import lombok.NonNull; @Data public class Person { // 姓名 @NonNull private String name; // 性别 private String sex; // 年纪 private Integer age; // 工资 private Integer salary; } 编译后 // // Source code recreated from a .class file by IntelliJ IDEA // (powered by Fernflower decompiler) // package com.ccbft.antigoods.stock; import lombok.NonNull; public class Person { @NonNull private String name; private String sex; private Integer age; private Integer salary; public Person(@NonNull final String name) { if (name == null) { throw new NullPointerException(&quot;name&quot;); } else { this.name = name; } } private Person() { } @NonNull public String getName() { return this.name; } public String getSex() { return this.sex; } public Integer getAge() { return this.age; } public Integer getSalary() { return this.salary; } public void setName(@NonNull final String name) { if (name == null) { throw new NullPointerException(&quot;name&quot;); } else { this.name = name; } } public void setSex(final String sex) { this.sex = sex; } public void setAge(final Integer age) { this.age = age; } public void setSalary(final Integer salary) { this.salary = salary; } public boolean equals(final Object o) { if (o == this) { return true; } else if (!(o instanceof Person)) { return false; } else { Person other = (Person)o; if (!other.canEqual(this)) { return false; } else { label59: { Object this$name = this.getName(); Object other$name = other.getName(); if (this$name == null) { if (other$name == null) { break label59; } } else if (this$name.equals(other$name)) { break label59; } return false; } Object this$sex = this.getSex(); Object other$sex = other.getSex(); if (this$sex == null) { if (other$sex != null) { return false; } } else if (!this$sex.equals(other$sex)) { return false; } Object this$age = this.getAge(); Object other$age = other.getAge(); if (this$age == null) { if (other$age != null) { return false; } } else if (!this$age.equals(other$age)) { return false; } Object this$salary = this.getSalary(); Object other$salary = other.getSalary(); if (this$salary == null) { if (other$salary != null) { return false; } } else if (!this$salary.equals(other$salary)) { return false; } return true; } } } protected boolean canEqual(final Object other) { return other instanceof Person; } public int hashCode() { int PRIME = true; int result = 1; Object $name = this.getName(); int result = result * 59 + ($name == null ? 43 : $name.hashCode()); Object $sex = this.getSex(); result = result * 59 + ($sex == null ? 43 : $sex.hashCode()); Object $age = this.getAge(); result = result * 59 + ($age == null ? 43 : $age.hashCode()); Object $salary = this.getSalary(); result = result * 59 + ($salary == null ? 43 : $salary.hashCode()); return result; } public String toString() { return &quot;Person(name=&quot; + this.getName() + &quot;, sex=&quot; + this.getSex() + &quot;, age=&quot; + this.getAge() + &quot;, salary=&quot; + this.getSalary() + &quot;)&quot;; } } @Builder为当前类生成静态内部构造类，用于方便构造当前对象 源代码 package com.ccbft.antigoods.stock; import lombok.Builder; @Builder public class Person { // 姓名 private String name; // 性别 private String sex; // 年纪 private Integer age; // 工资 private Integer salary; public static void main(String[] args) { Person person = Person.builder().name(&quot;yanhui&quot;).sex(&quot;M&quot;).age(19).build(); System.out.println(person); } } 编译后 // // Source code recreated from a .class file by IntelliJ IDEA // (powered by Fernflower decompiler) // package com.ccbft.antigoods.stock; public class Person { private String name; private String sex; private Integer age; private Integer salary; public static void main(String[] args) { Person person = builder().name(&quot;yanhui&quot;).sex(&quot;M&quot;).age(19).build(); System.out.println(person); } Person(final String name, final String sex, final Integer age, final Integer salary) { this.name = name; this.sex = sex; this.age = age; this.salary = salary; } public static Person.PersonBuilder builder() { return new Person.PersonBuilder(); } public static class PersonBuilder { private String name; private String sex; private Integer age; private Integer salary; PersonBuilder() { } public Person.PersonBuilder name(final String name) { this.name = name; return this; } public Person.PersonBuilder sex(final String sex) { this.sex = sex; return this; } public Person.PersonBuilder age(final Integer age) { this.age = age; return this; } public Person.PersonBuilder salary(final Integer salary) { this.salary = salary; return this; } public Person build() { return new Person(this.name, this.sex, this.age, this.salary); } public String toString() { return &quot;Person.PersonBuilder(name=&quot; + this.name + &quot;, sex=&quot; + this.sex + &quot;, age=&quot; + this.age + &quot;, salary=&quot; + this.salary + &quot;)&quot;; } } } @Slf4j生成Slf4j日志框架的静态日志变量，不同的日志框架有不同的注解 image-20200525164903531 源代码 package com.ccbft.antigoods.stock; import lombok.extern.slf4j.Slf4j; @Slf4j public class Person { // 姓名 private String name; // 性别 private String sex; // 年纪 private Integer age; // 工资 private Integer salary; public static void main(String[] args) { log.info(&quot;slf4j log ...&quot;); } } 编译后 // // Source code recreated from a .class file by IntelliJ IDEA // (powered by Fernflower decompiler) // package com.ccbft.antigoods.stock; import org.slf4j.Logger; import org.slf4j.LoggerFactory; public class Person { private static final Logger log = LoggerFactory.getLogger(Person.class); private String name; private String sex; private Integer age; private Integer salary; public Person() { } public static void main(String[] args) { log.info(&quot;slf4j log ...&quot;); } } @Cleanup自动关闭资源对象，针对实现了 java.io.Closeable 接口的对象 源代码 package com.ccbft.antigoods.stock; import lombok.Cleanup; import java.io.IOException; import java.io.InputStream; import java.nio.file.Files; import java.nio.file.Paths; public class Person { public static void main(String[] args) throws IOException { @Cleanup InputStream inputStream = Files.newInputStream(Paths.get(&quot;/opt/1.txt&quot;)); byte[] bs = new byte[4096]; while (inputStream.read(bs) != -1) { // } } } 编译后 // // Source code recreated from a .class file by IntelliJ IDEA // (powered by Fernflower decompiler) // package com.ccbft.antigoods.stock; import java.io.IOException; import java.io.InputStream; import java.nio.file.Files; import java.nio.file.Paths; import java.util.Collections; public class Person { public Person() { } public static void main(String[] args) throws IOException { InputStream inputStream = Files.newInputStream(Paths.get(&quot;/opt/1.txt&quot;)); try { byte[] bs = new byte[4096]; while(true) { if (inputStream.read(bs) != -1) { continue; } } } finally { if (Collections.singletonList(inputStream).get(0) != null) { inputStream.close(); } } } }","categories":[{"name":"java","slug":"java","permalink":"http://yanhui2018.gitee.io/categories/java/"}],"tags":[{"name":"lombok","slug":"lombok","permalink":"http://yanhui2018.gitee.io/tags/lombok/"}]},{"title":"Maven","slug":"java/Maven","date":"2020-06-04T16:00:00.000Z","updated":"2020-06-11T08:54:05.936Z","comments":true,"path":"2020/06/05/java/Maven/","link":"","permalink":"http://yanhui2018.gitee.io/2020/06/05/java/Maven/","excerpt":"","text":"[TOC] 环境配置安装 下载apache-maven-version包解压 添加${maven-home}/bin到path环境变量 命令行执行mvn -version查看是否安装成功 image-20200528101133625 settings.xml配置文件 localRepository：配置本地仓库路径 servers：配置私服连接的用户名，密码 mirrors：配置仓库源，可配置多个源 proxies：设置maven网络连接的代理，在需要通过代理服务器上网的环境下使用 profiles：主要用于定义区分不同的环境，例如开发，测试，生产…等；与pom.xml文件中的profiles节点类似，如果和pom中存在相同的id，此处优先级更高 配置文件内容如下： &lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership. The ASF licenses this file to you under the Apache License, Version 2.0 (the &quot;License&quot;); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. --&gt; &lt;!-- | This is the configuration file for Maven. It can be specified at two levels: | | 1. User Level. This settings.xml file provides configuration for a single user, | and is normally provided in ${user.home}/.m2/settings.xml. | | NOTE: This location can be overridden with the CLI option: | | -s /path/to/user/settings.xml | | 2. Global Level. This settings.xml file provides configuration for all Maven | users on a machine (assuming they&#39;re all using the same Maven | installation). It&#39;s normally provided in | ${maven.conf}/settings.xml. | | NOTE: This location can be overridden with the CLI option: | | -gs /path/to/global/settings.xml | | The sections in this sample file are intended to give you a running start at | getting the most out of your Maven installation. Where appropriate, the default | values (values used when the setting is not specified) are provided. | |--&gt; &lt;settings xmlns=&quot;http://maven.apache.org/SETTINGS/1.0.0&quot; xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xsi:schemaLocation=&quot;http://maven.apache.org/SETTINGS/1.0.0 http://maven.apache.org/xsd/settings-1.0.0.xsd&quot;&gt; &lt;!-- localRepository | The path to the local repository maven will use to store artifacts. | | Default: ${user.home}/.m2/repository &lt;localRepository&gt;/path/to/local/repo&lt;/localRepository&gt; --&gt; &lt;localRepository&gt;Z:/env/repos-noIdea&lt;/localRepository&gt; &lt;!-- interactiveMode | This will determine whether maven prompts you when it needs input. If set to false, | maven will use a sensible default value, perhaps based on some other setting, for | the parameter in question. | | Default: true &lt;interactiveMode&gt;true&lt;/interactiveMode&gt; --&gt; &lt;!-- offline | Determines whether maven should attempt to connect to the network when executing a build. | This will have an effect on artifact downloads, artifact deployment, and others. | | Default: false &lt;offline&gt;false&lt;/offline&gt; --&gt; &lt;!-- pluginGroups | This is a list of additional group identifiers that will be searched when resolving plugins by their prefix, i.e. | when invoking a command line like &quot;mvn prefix:goal&quot;. Maven will automatically add the group identifiers | &quot;org.apache.maven.plugins&quot; and &quot;org.codehaus.mojo&quot; if these are not already contained in the list. |--&gt; &lt;pluginGroups&gt; &lt;!-- pluginGroup | Specifies a further group identifier to use for plugin lookup. &lt;pluginGroup&gt;com.your.plugins&lt;/pluginGroup&gt; --&gt; &lt;/pluginGroups&gt; &lt;!-- proxies | This is a list of proxies which can be used on this machine to connect to the network. | Unless otherwise specified (by system property or command-line switch), the first proxy | specification in this list marked as active will be used. |--&gt; &lt;proxies&gt; &lt;!-- proxy | Specification for one proxy, to be used in connecting to the network. | &lt;proxy&gt; &lt;id&gt;optional&lt;/id&gt; &lt;active&gt;true&lt;/active&gt; &lt;protocol&gt;http&lt;/protocol&gt; &lt;username&gt;proxyuser&lt;/username&gt; &lt;password&gt;proxypass&lt;/password&gt; &lt;host&gt;proxy.host.net&lt;/host&gt; &lt;port&gt;80&lt;/port&gt; &lt;nonProxyHosts&gt;local.net|some.host.com&lt;/nonProxyHosts&gt; &lt;/proxy&gt; --&gt; &lt;/proxies&gt; &lt;!-- servers | This is a list of authentication profiles, keyed by the server-id used within the system. | Authentication profiles can be used whenever maven must make a connection to a remote server. |--&gt; &lt;servers&gt; &lt;!-- server | Specifies the authentication information to use when connecting to a particular server, identified by | a unique name within the system (referred to by the &#39;id&#39; attribute below). | | NOTE: You should either specify username/password OR privateKey/passphrase, since these pairings are | used together. | &lt;server&gt; &lt;id&gt;deploymentRepo&lt;/id&gt; &lt;username&gt;repouser&lt;/username&gt; &lt;password&gt;repopwd&lt;/password&gt; &lt;/server&gt; --&gt; &lt;!-- Another sample, using keys to authenticate. &lt;server&gt; &lt;id&gt;siteServer&lt;/id&gt; &lt;privateKey&gt;/path/to/private/key&lt;/privateKey&gt; &lt;passphrase&gt;optional; leave empty if not used.&lt;/passphrase&gt; &lt;/server&gt; --&gt; &lt;/servers&gt; &lt;!-- mirrors | This is a list of mirrors to be used in downloading artifacts from remote repositories. | | It works like this: a POM may declare a repository to use in resolving certain artifacts. | However, this repository may have problems with heavy traffic at times, so people have mirrored | it to several places. | | That repository definition will have a unique id, so we can create a mirror reference for that | repository, to be used as an alternate download site. The mirror site will be the preferred | server for that repository. |--&gt; &lt;mirrors&gt; &lt;!-- mirror | Specifies a repository mirror site to use instead of a given repository. The repository that | this mirror serves has an ID that matches the mirrorOf element of this mirror. IDs are used | for inheritance and direct lookup purposes, and must be unique across the set of mirrors. | --&gt; &lt;mirror&gt; &lt;id&gt;nexus-aliyun&lt;/id&gt; &lt;mirrorOf&gt;central&lt;/mirrorOf&gt; &lt;name&gt;Nexus aliyun&lt;/name&gt; &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public&lt;/url&gt; &lt;/mirror&gt; &lt;/mirrors&gt; &lt;!-- profiles | This is a list of profiles which can be activated in a variety of ways, and which can modify | the build process. Profiles provided in the settings.xml are intended to provide local machine- | specific paths and repository locations which allow the build to work in the local environment. | | For example, if you have an integration testing plugin - like cactus - that needs to know where | your Tomcat instance is installed, you can provide a variable here such that the variable is | dereferenced during the build process to configure the cactus plugin. | | As noted above, profiles can be activated in a variety of ways. One way - the activeProfiles | section of this document (settings.xml) - will be discussed later. Another way essentially | relies on the detection of a system property, either matching a particular value for the property, | or merely testing its existence. Profiles can also be activated by JDK version prefix, where a | value of &#39;1.4&#39; might activate a profile when the build is executed on a JDK version of &#39;1.4.2_07&#39;. | Finally, the list of active profiles can be specified directly from the command line. | | NOTE: For profiles defined in the settings.xml, you are restricted to specifying only artifact | repositories, plugin repositories, and free-form properties to be used as configuration | variables for plugins in the POM. | |--&gt; &lt;profiles&gt; &lt;!-- profile | Specifies a set of introductions to the build process, to be activated using one or more of the | mechanisms described above. For inheritance purposes, and to activate profiles via &lt;activatedProfiles/&gt; | or the command line, profiles have to have an ID that is unique. | | An encouraged best practice for profile identification is to use a consistent naming convention | for profiles, such as &#39;env-dev&#39;, &#39;env-test&#39;, &#39;env-production&#39;, &#39;user-jdcasey&#39;, &#39;user-brett&#39;, etc. | This will make it more intuitive to understand what the set of introduced profiles is attempting | to accomplish, particularly when you only have a list of profile id&#39;s for debug. | | This profile example uses the JDK version to trigger activation, and provides a JDK-specific repo. &lt;profile&gt; &lt;id&gt;jdk-1.4&lt;/id&gt; &lt;activation&gt; &lt;jdk&gt;1.4&lt;/jdk&gt; &lt;/activation&gt; &lt;repositories&gt; &lt;repository&gt; &lt;id&gt;jdk14&lt;/id&gt; &lt;name&gt;Repository for JDK 1.4 builds&lt;/name&gt; &lt;url&gt;http://www.myhost.com/maven/jdk14&lt;/url&gt; &lt;layout&gt;default&lt;/layout&gt; &lt;snapshotPolicy&gt;always&lt;/snapshotPolicy&gt; &lt;/repository&gt; &lt;/repositories&gt; &lt;/profile&gt; --&gt; &lt;!-- | Here is another profile, activated by the system property &#39;target-env&#39; with a value of &#39;dev&#39;, | which provides a specific path to the Tomcat instance. To use this, your plugin configuration | might hypothetically look like: | | ... | &lt;plugin&gt; | &lt;groupId&gt;org.myco.myplugins&lt;/groupId&gt; | &lt;artifactId&gt;myplugin&lt;/artifactId&gt; | | &lt;configuration&gt; | &lt;tomcatLocation&gt;${tomcatPath}&lt;/tomcatLocation&gt; | &lt;/configuration&gt; | &lt;/plugin&gt; | ... | | NOTE: If you just wanted to inject this configuration whenever someone set &#39;target-env&#39; to | anything, you could just leave off the &lt;value/&gt; inside the activation-property. | &lt;profile&gt; &lt;id&gt;env-dev&lt;/id&gt; &lt;activation&gt; &lt;property&gt; &lt;name&gt;target-env&lt;/name&gt; &lt;value&gt;dev&lt;/value&gt; &lt;/property&gt; &lt;/activation&gt; &lt;properties&gt; &lt;tomcatPath&gt;/path/to/tomcat/instance&lt;/tomcatPath&gt; &lt;/properties&gt; &lt;/profile&gt; --&gt; &lt;/profiles&gt; &lt;!-- activeProfiles | List of profiles that are active for all builds. | &lt;activeProfiles&gt; &lt;activeProfile&gt;alwaysActiveProfile&lt;/activeProfile&gt; &lt;activeProfile&gt;anotherAlwaysActiveProfile&lt;/activeProfile&gt; &lt;/activeProfiles&gt; --&gt; &lt;/settings&gt; POMmaven项目的核心是pom.xml 基本信息 modelVersion：maven模块的版本信息 groupId：组织标识，系统标识 artifactId：系统模块标识，子系统标识 version：版本信息 依赖dependencies 管理项目所有的依赖jar包 image-20200528105329881 依赖范围scope compile 编译期依赖，默认值，在编译、测试、运行期间都有效；例如spring-core包 test 测试期间有效；例如Junit包 provided 编译期、测试期有效，运行期间无效 runtime 测试和运行期间有效； system 依赖范围和provided 一样，需要通过systemPath指定本地依赖文件的路径；例如本地类库 子项目依赖管理dependencyManagement &lt;dependencyManagement&gt;节点主要用于集中统一管理依赖的版本 我们以spring-boot-starter-parent为例子，它则是通过spring-boot-dependencies这个pom来统一定义和管理依赖版本的，这样在子模块中就不用再关心相关依赖的版本问题了 image-20200528104943734 继承parent 统一管理项目下的多个模块，即聚合模块，每个子模块通过parent引用相同的父模块 统一管理模块的公共依赖，例如A,B模块都依赖mybatis.jar，如果要升级mybatis则需要修改A,B各模块的pom依赖；此时可以将依赖统一管理在父模块中，修改父模块的版本，子模块A,B的版本也就都修改了 构建管理build&lt;build&gt;标签描述了如何编译和打包项目，具体的工作是由其子节点&lt;plugins&gt;来完成的 生命周期Maven的生命周期主要是由各个插件来完成的，主要包含以下阶段 20190606100220896 IDEA编辑器的Maven窗口包含以下生命周期 mvn clean 清理编译的项目内容 mvn validate mvn compile 编译 mvn test 测试 mvn package 打包，生成jar/war包 mvn verify mvn install 将项目安装到本地仓库 mvn site mvn deploy 将项目包复制到远程仓库（私服） 仓库本地仓库 maven插件，项目需要的第三方依赖等下载后都会保存在本地仓库下，默认路径${user.home}/.m2/repository 执行mvn install命令后会将本地工程安装到本地仓库 中央仓库 由组织统一管理的开源仓库，开发者可推送上传自己代码，共享给其他人 https://mvnrepository.com/站点提供了中央仓库jar的检索 私服 用于管理公司私有的jar包 加快中央仓库jar包的访问速度，下载一次后，每次jar包下载后都会缓存在本地私服，下次则可以直接从私服获取 私服通常通过Nexus搭建 约定插件聚合将一个大的项目分成多个模块，然后通过&lt;modules&gt;&lt;/modules&gt;整合在一起","categories":[{"name":"java","slug":"java","permalink":"http://yanhui2018.gitee.io/categories/java/"}],"tags":[{"name":"maven","slug":"maven","permalink":"http://yanhui2018.gitee.io/tags/maven/"}]},{"title":"Python入门","slug":"other/Python入门","date":"2020-06-04T16:00:00.000Z","updated":"2020-06-11T08:54:05.938Z","comments":true,"path":"2020/06/05/other/Python入门/","link":"","permalink":"http://yanhui2018.gitee.io/2020/06/05/other/Python%E5%85%A5%E9%97%A8/","excerpt":"","text":"[toc] 准备工作下载 image-20200605094558959 安装 默认安装路径 C:\\Users\\yanhui\\AppData\\Local\\Programs\\Python\\Python38-32 配置环境变量Path，加入如下路径 C:\\Users\\yanhui\\AppData\\Local\\Programs\\Python\\Python38-32 C:\\Users\\yanhui\\AppData\\Local\\Programs\\Python\\Python38-32\\Scripts 查看版本 image-20200605140100270 包管理器pip Usage: pip &lt;command&gt; [options] Commands: install Install packages. download Download packages. uninstall Uninstall packages. freeze Output installed packages in requirements format. list List installed packages. show Show information about installed packages. check Verify installed packages have compatible dependencies. config Manage local and global configuration. search Search PyPI for packages. wheel Build wheels from your requirements. hash Compute hashes of package archives. completion A helper command used for command completion. debug Show information useful for debugging. help Show help for commands. 替换pip源为国内源 用户目录下新建pip文件夹，文件夹下新建pip.ini文件 pip.ini文件内容 [global] index-url = http://mirrors.aliyun.com/pypi/simple/ [install] trusted-host=mirrors.aliyun.com 查看应用是否成功 C:\\Users\\yanhui&gt;pip list Package Version ---------- ------- pip 19.2.3 setuptools 41.2.0 WARNING: The repository located at mirrors.aliyun.com is not a trusted or secure host and is being ignored. If this repository is available via HTTPS we recommend you use HTTPS instead, otherwise you may silence this warning and allow it anyway with &#39;--trusted-host mirrors.aliyun.com&#39;.","categories":[{"name":"other","slug":"other","permalink":"http://yanhui2018.gitee.io/categories/other/"}],"tags":[{"name":"python","slug":"python","permalink":"http://yanhui2018.gitee.io/tags/python/"}]},{"title":"POI","slug":"java/POI","date":"2020-05-31T16:00:00.000Z","updated":"2020-06-11T08:54:05.936Z","comments":true,"path":"2020/06/01/java/POI/","link":"","permalink":"http://yanhui2018.gitee.io/2020/06/01/java/POI/","excerpt":"","text":"[TOC] Excel常用操作Junit测试环境private Path fileHomePath; @Before public void before() { fileHomePath = Paths.get(&quot;d:/test&quot;); } 生成excel文件@Test public void createExcel() throws IOException { Path filePath = fileHomePath.resolve(&quot;hello.xlsx&quot;); if (Files.notExists(filePath)) { Files.createFile(filePath); } try ( XSSFWorkbook workbook = new XSSFWorkbook(); ) { Sheet sheet = workbook.createSheet(); Row firstRow = sheet.createRow(0); firstRow.createCell(0).setCellValue(&quot;hello poi...&quot;); workbook.write(Files.newOutputStream(filePath)); } } 读取excel内容@Test public void readExcel() throws IOException { Path filePath = fileHomePath.resolve(&quot;hello.xlsx&quot;); if (Files.notExists(filePath)) { System.out.println(&quot;文件不存在&quot;); return; } try ( XSSFWorkbook workbook = new XSSFWorkbook(Files.newInputStream(filePath)); ) { Sheet sheet = workbook.getSheetAt(0); Row firstRow = sheet.getRow(0); String row0cell0Value = firstRow.getCell(0).getStringCellValue(); System.out.println(row0cell0Value); } } 合并行列 指定一个区域内行列的范围进行合并 image-20200609175031029 @Test public void mergedCell() throws IOException { Path filePath = fileHomePath.resolve(&quot;mergedCell.xlsx&quot;); if (Files.notExists(filePath)) { Files.createFile(filePath); } try ( XSSFWorkbook workbook = new XSSFWorkbook(); ) { Sheet sheet = workbook.createSheet(); Row firstRow = sheet.createRow(0); firstRow.createCell(0).setCellValue(&quot;hello poi...&quot;); /** * 合并第一行的1-7列 */ CellRangeAddress region = new CellRangeAddress(0, 0, 0, 6); sheet.addMergedRegion(region); workbook.write(Files.newOutputStream(filePath)); } } 行高@Test public void setRowHeight() throws IOException { Path filePath = fileHomePath.resolve(&quot;setRowHeight.xlsx&quot;); if (Files.notExists(filePath)) { Files.createFile(filePath); } try ( XSSFWorkbook workbook = new XSSFWorkbook(); ) { Sheet sheet = workbook.createSheet(); Row firstRow = sheet.createRow(0); firstRow.createCell(0).setCellValue(&quot;hello poi...&quot;); // 设置行高 firstRow.setHeightInPoints(100); workbook.write(Files.newOutputStream(filePath)); } } 列宽 列宽的单位为1个英文字符长度的1/256 image-20200609174925379 @Test public void setColumnWidth() throws IOException { Path filePath = fileHomePath.resolve(&quot;setColumnWidth.xlsx&quot;); if (Files.notExists(filePath)) { Files.createFile(filePath); } try ( XSSFWorkbook workbook = new XSSFWorkbook(); ) { Sheet sheet = workbook.createSheet(); Row firstRow = sheet.createRow(0); firstRow.createCell(0).setCellValue(&quot;本列宽20个字符长度...&quot;); sheet.createRow(1).createCell(0).setCellValue(&quot;zxcvbnmasdfghjklqwer&quot;); /** * 宽度单位为1个英文字符宽度的1/256，如下设置20个英文字符的宽度 */ sheet.setColumnWidth(0, 256 * 20); workbook.write(Files.newOutputStream(filePath)); } } 文字对齐 支持文字在水平方向和垂直方向的对齐方式 image-20200609174825485 @Test public void setAlignment() throws IOException { Path filePath = fileHomePath.resolve(&quot;setAlignment.xlsx&quot;); if (Files.notExists(filePath)) { Files.createFile(filePath); } try ( XSSFWorkbook workbook = new XSSFWorkbook(); ) { Sheet sheet = workbook.createSheet(); Row firstRow = sheet.createRow(0); firstRow.createCell(0).setCellValue(&quot;hello poi...&quot;); firstRow.setHeightInPoints(100); // 创建列样式 CellStyle cellStyle = workbook.createCellStyle(); // 水平居中 cellStyle.setAlignment(HorizontalAlignment.CENTER); // 垂直居中 cellStyle.setVerticalAlignment(VerticalAlignment.CENTER); firstRow.getCell(0).setCellStyle(cellStyle); workbook.write(Files.newOutputStream(filePath)); } } 前景色，文字颜色 image-20200609174225578 @Test public void setCellColor() throws IOException { Path filePath = fileHomePath.resolve(&quot;setCellColor.xlsx&quot;); if (Files.notExists(filePath)) { Files.createFile(filePath); } try ( XSSFWorkbook workbook = new XSSFWorkbook(); ) { Sheet sheet = workbook.createSheet(); Row firstRow = sheet.createRow(0); firstRow.createCell(0).setCellValue(&quot;前景填充色ORANGE...&quot;); firstRow.createCell(1).setCellValue(&quot;文字颜色RED...&quot;); firstRow.setHeightInPoints(100); // 设置前景填充色 CellStyle cellStyle = workbook.createCellStyle(); cellStyle.setFillForegroundColor(HSSFColor.HSSFColorPredefined.ORANGE.getIndex()); cellStyle.setFillPattern(FillPatternType.SOLID_FOREGROUND); firstRow.getCell(0).setCellStyle(cellStyle); // 设置文字颜色 CellStyle cellStyle2 = workbook.createCellStyle(); Font font2 = workbook.createFont(); font2.setColor(HSSFColor.HSSFColorPredefined.RED.getIndex()); cellStyle2.setFont(font2); firstRow.getCell(1).setCellStyle(cellStyle2); workbook.write(Files.newOutputStream(filePath)); } } 设置部分文字的颜色 通过富文本RichTextString实现 image-20200609173917651 @Test public void setPartTextColor() throws IOException { Path filePath = fileHomePath.resolve(&quot;setPartTextColor.xlsx&quot;); if (Files.notExists(filePath)) { Files.createFile(filePath); } try ( XSSFWorkbook workbook = new XSSFWorkbook(); ) { Sheet sheet = workbook.createSheet(); Row firstRow = sheet.createRow(0); // 创建富文本 XSSFRichTextString richString = new XSSFRichTextString(&quot;Hello, World!&quot;); Font font = workbook.createFont(); font.setColor(HSSFColor.HSSFColorPredefined.RED.getIndex()); // 设置指定字符的字体 richString.applyFont(0, 5, font); firstRow.createCell(0).setCellValue(richString); workbook.write(Files.newOutputStream(filePath)); } } 文字自动换行 默认文字会在水平方向排列，溢出后隐藏 自动换行保证文字不会在水平方向隐藏，超过后自动换行 image-20200609174324600 @Test public void setTextWrapper() throws IOException { Path filePath = fileHomePath.resolve(&quot;setTextWrapper.xlsx&quot;); if (Files.notExists(filePath)) { Files.createFile(filePath); } try ( XSSFWorkbook workbook = new XSSFWorkbook(); ) { Sheet sheet = workbook.createSheet(); Row firstRow = sheet.createRow(0); firstRow.createCell(0).setCellValue(&quot;我会自动换行，不用担心...&quot;); firstRow.setHeightInPoints(100); // 设置文字自动换行，保证文字可见 CellStyle cellStyle = workbook.createCellStyle(); cellStyle.setWrapText(true); firstRow.getCell(0).setCellStyle(cellStyle); workbook.write(Files.newOutputStream(filePath)); } } 注释说明 注释框可自定义高度和宽度，单位为单元格默认的行高和列宽 XSSFClientAnchor构造函数的后四个参数决定了注释框的大小 image-20200609174502828 image-20200609174454675 @Test public void setComment() throws IOException { Path filePath = fileHomePath.resolve(&quot;setComment.xlsx&quot;); if (Files.notExists(filePath)) { Files.createFile(filePath); } try ( XSSFWorkbook workbook = new XSSFWorkbook(); ) { Sheet sheet = workbook.createSheet(); Row firstRow = sheet.createRow(0); Cell cell = firstRow.createCell(0); cell.setCellValue(&quot;我有注释的喔...&quot;); firstRow.createCell(1).setCellValue(&quot;我也有注释的喔...&quot;); // 设置注释 Drawing drawing = sheet.createDrawingPatriarch(); ClientAnchor clientAnchor = new XSSFClientAnchor(0, 0, 0, 0, 0, 1, 0, 0); Comment comment = drawing.createCellComment(clientAnchor); comment.setString(new XSSFRichTextString(&quot;注释的内容在这里~~&quot;)); cell.setCellComment(comment); /** * * col2 - col1 决定了注释弹框的长度，差值为10则宽度为10列的宽度 * row2 - row1 决定了注释弹框的高度，差值为10则高度为10行的高度 * * dx1 dy1 dx2 dy2 不影响 * */ ClientAnchor clientAnchor2 = new XSSFClientAnchor(0, 0, 0, 0, 1, 1, 10, 10); Comment comment2 = drawing.createCellComment(clientAnchor2); comment2.setString(new XSSFRichTextString(&quot;注释的内容在这里2222~~&quot;)); firstRow.getCell(1).setCellComment(comment2); workbook.write(Files.newOutputStream(filePath)); } } 下拉列表 image-20200609174747084 少量下拉数据/** * 设置下拉列表，适用于少量数据的下拉列表，下拉列表字符总长度小于255 * &lt;p&gt; * 当下拉字符串长度超过 255 时， POI会报错, {@link org.apache.poi.ss.formula.ptg.StringPtg#StringPtg(String)} * * @throws IOException */ @Test public void setDropDownList() throws IOException { Path filePath = fileHomePath.resolve(&quot;setDropDownList.xlsx&quot;); if (Files.notExists(filePath)) { Files.createFile(filePath); } try ( XSSFWorkbook workbook = new XSSFWorkbook(); ) { XSSFSheet sheet = workbook.createSheet(); String[] selectList = new String[]{&quot;a1&quot;, &quot;a2&quot;, &quot;a3&quot;}; // 设置下拉列表范围，第3列，1-101行 CellRangeAddressList regions = new CellRangeAddressList(0, 100, 2, 2); DataValidationHelper dataValidationHelper = new XSSFDataValidationHelper(sheet); // 在指定regions下设置下拉列表 DataValidationConstraint dataValidationConstraint = dataValidationHelper.createExplicitListConstraint(selectList); DataValidation dataValidation = dataValidationHelper.createValidation(dataValidationConstraint, regions); sheet.addValidationData(dataValidation); workbook.write(Files.newOutputStream(filePath)); } } 大量下拉数据 新建一个隐藏的表格，在隐藏表格中写入下拉数据，通过名称管理器(公式)关联隐藏表格的数据 通过名称空间创建数据验证常量 @Test public void setBigDropDownList() throws IOException { Path filePath = fileHomePath.resolve(&quot;setBigDropDownList.xlsx&quot;); if (Files.notExists(filePath)) { Files.createFile(filePath); } try ( XSSFWorkbook workbook = new XSSFWorkbook(); ) { XSSFSheet sheet = workbook.createSheet(); String[] selectList = new String[]{&quot;abc1&quot;, &quot;abc2&quot;, &quot;abc3&quot;}; // 生成隐藏表格 Sheet hiddenSheet = workbook.createSheet(&quot;hideSheet&quot;); workbook.setSheetHidden(workbook.getSheetIndex(hiddenSheet), true); // 循环设置隐藏表格的下拉数据 int rowIndex = 0; for (String value : selectList) { Row row = hiddenSheet.createRow(rowIndex++); Cell cell = row.createCell(0); cell.setCellValue(value); } // 创建名称管理器，名称管理器属于公式的一部分，主要用于引用数据，例如在A表格中引用B表格中某个位置的数据 Name namedCell = workbook.createName(); namedCell.setNameName(&quot;selectList_test&quot;);//设置名称空间名字 // 通过名称空间关联数据，关联hideSheet表格中A1到A3的数据，A3可通过下拉列表长度动态设置 namedCell.setRefersToFormula(&quot;hideSheet&quot; + &quot;!$A$1:$A$3&quot;); // 设置下拉列表应用范围，第3列，1-101行 CellRangeAddressList regions = new CellRangeAddressList(0, 100, 2, 2); DataValidationHelper dataValidationHelper = new XSSFDataValidationHelper(sheet); // 通过名称空间名字关联下拉数据 DataValidationConstraint dataValidationConstraint = dataValidationHelper.createFormulaListConstraint(&quot;selectList_test&quot;); DataValidation dataValidation = dataValidationHelper.createValidation(dataValidationConstraint, regions); sheet.addValidationData(dataValidation); workbook.write(Files.newOutputStream(filePath)); } }","categories":[{"name":"java","slug":"java","permalink":"http://yanhui2018.gitee.io/categories/java/"}],"tags":[{"name":"poi","slug":"poi","permalink":"http://yanhui2018.gitee.io/tags/poi/"},{"name":"office","slug":"office","permalink":"http://yanhui2018.gitee.io/tags/office/"},{"name":"excel","slug":"excel","permalink":"http://yanhui2018.gitee.io/tags/excel/"}]},{"title":"SonarLint代码检查问题总结","slug":"java/SonarLint代码检查问题总结","date":"2020-05-19T16:00:00.000Z","updated":"2020-06-11T08:54:05.936Z","comments":true,"path":"2020/05/20/java/SonarLint代码检查问题总结/","link":"","permalink":"http://yanhui2018.gitee.io/2020/05/20/java/SonarLint%E4%BB%A3%E7%A0%81%E6%A3%80%E6%9F%A5%E9%97%AE%E9%A2%98%E6%80%BB%E7%BB%93/","excerpt":"","text":"[toc] IDEA安装sonar lint image-20200526110544840 执行检查 检查指定包下的问题，选中包，右键选择 SonarLint-&gt;Analyze with SonarLint（快捷键：Ctrl+Shift+S），分析完成后即可在SonarLint面板上看到问题列表 image-20200526110753666 检查单个文件类的问题，在打开文件窗口右键选择Analyze with SonarLint image-20200526111022430 常见问题弱类型 在有定义泛型的类和方法时，没有传类型 Raw types should not be used Generic types shouldn&#39;t be used raw (without type parameters) in variable declarations or return values. Doing so bypasses generic type checking, and defers the catch of unsafe code to runtime.泛型对象定义方式不对 使用了错误的方式定义泛型，导致无法正确推倒泛型 错误方式，引用的参数类型一定要加，不然无法推断类型，构造对象的地方可以不加，使用new BaseResponse&lt;&gt;()即可 image-20200526141230418 正确方式 image-20200526141359450 资源对象没关闭 在使用完资源对象（实现了Closeable接口）后没有关闭 Resources should be closed Connections, streams, files, and other classes that implement the Closeable interface or its super-interface, AutoCloseable, needs to be closed after use. Further, that close call must be made in a finally block otherwise an exception could keep the call from being made. Preferably, when class implements AutoCloseable, resource should be created using &quot;try-with-resources&quot; pattern and will be closed automatically. Failure to properly close resources will result in a resource leak which could bring first the application and then perhaps the box it&#39;s on to their knees. JDK1.7后可使用 try(初始化资源对象){...}catch(){...}语法自动关闭资源 try( // 资源对象 FileWriter fw = new FileWriter(&quot;aa.txt&quot;) ) { fw.write(&quot;bbbbbbbbbbbbbb&quot;); } catch(Exception ex) { ex.printStackTrace(); } 未使用字符串常量 对多次重复出现的字符串没有统一定义常量 String literals should not be duplicated Duplicated string literals make the process of refactoring error-prone, since you must be sure to update all occurrences. On the other hand, constants can be referenced from many places, but only need to be updated in a single place.未使用非同步替代类 在不需要保证同步和线程安全的情况下，尽量使用非同步替代类，减少开销 Early classes of the Java API, such as Vector, Hashtable and StringBuffer, were synchronized to make them thread-safe. Unfortunately, synchronization has a big negative impact on performance, even when using these collections from a single thread. It is better to use their new unsynchronized replacements: ArrayList or LinkedList instead of Vector Deque instead of Stack HashMap instead of Hashtable StringBuilder instead of StringBuffer日志打印 出现多余的占位符，如下图，占位符{}多余 image-20200528155030182 记录日志使用字符串拼接，可使用占位符{}代替 image-20200528160323486 日志占位符参数多余调用toString()方法，占位符参数支持Object，不需要转换成String image-20200528160548776 使用e.printStackTrace()记录错误日志，使用log.error(&quot;错误描述&quot;, e)记录 image-20200528160838482 方法未重构 单个方法代码行数过多 代码层级结构比较复杂 没有注释 嵌套使用try-catch 如下图，内部try-catch和外部的处理一模一样，完全可以去掉 如果是为了捕获多个不同的业务异常，可以使用多个catch分支 image-20200528165402178 image-20200528165455089 数字包装类手动拆箱 包装类可直接进行数学运算，运算过程会自动拆箱，不需要手动拆箱再去运算 image-20200528165931140","categories":[{"name":"java","slug":"java","permalink":"http://yanhui2018.gitee.io/categories/java/"}],"tags":[{"name":"sonar","slug":"sonar","permalink":"http://yanhui2018.gitee.io/tags/sonar/"},{"name":"lint","slug":"lint","permalink":"http://yanhui2018.gitee.io/tags/lint/"}]},{"title":"Java8-Stream流式操作集合","slug":"java/Java8-Stream流式操作集合","date":"2020-05-09T16:00:00.000Z","updated":"2020-06-11T08:54:05.935Z","comments":true,"path":"2020/05/10/java/Java8-Stream流式操作集合/","link":"","permalink":"http://yanhui2018.gitee.io/2020/05/10/java/Java8-Stream%E6%B5%81%E5%BC%8F%E6%93%8D%E4%BD%9C%E9%9B%86%E5%90%88/","excerpt":"","text":"利用java8提供的集合数据处理能力，快速完成日常工作中的分组，排序，过滤，求和，去重…… [TOC] 测试类 Person.java 后面的测试都是以Person对象的集合处理展开 @Data @AllArgsConstructor @ToString class Person { // 姓名 String name; // 性别 String sex; // 年纪 Integer age; // 工资 Integer salary; } 循环List循环List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 25, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 48, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); personList.forEach(System.out::println); 执行结果： Person(name=张三, sex=男, age=17, salary=1000) Person(name=李四, sex=男, age=25, salary=5000) Person(name=王五, sex=女, age=36, salary=3000) Person(name=赵六, sex=女, age=48, salary=7000) Person(name=多多, sex=男, age=100, salary=9000)Map循环Map&lt;String, List&lt;Person&gt;&gt; sexMap = new HashMap&lt;&gt;(); sexMap.put(&quot;男&quot;, Arrays.asList( new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000), new Person(&quot;李四&quot;, &quot;男&quot;, 25, 5000) )); sexMap.put(&quot;女&quot;, Arrays.asList( new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000), new Person(&quot;赵六&quot;, &quot;女&quot;, 48, 7000) )); sexMap.forEach((key, value) -&gt; { System.out.println(key); System.out.println(value); }); 执行结果： 女 [Person(name=王五, sex=女, age=36, salary=3000), Person(name=赵六, sex=女, age=48, salary=7000)] 男 [Person(name=张三, sex=男, age=17, salary=1000), Person(name=李四, sex=男, age=25, salary=5000)]结果收集收集集合流中的所有人的姓名，拼接返回字符串 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 36, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000)); personList.add(new Person(&quot;张三&quot;, &quot;女&quot;, 17, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); personList.add(new Person(&quot;哈哈&quot;, &quot;男&quot;, 36, 4000)); String nameStr = personList.stream().map(Person::getName).collect(Collectors.joining(&quot;,&quot;)); System.out.println(nameStr); 执行结果： 张三,李四,王五,张三,多多,哈哈映射映射原始集合，结合collect方法生成新的集合 获取所有人的姓名集合 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 25, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 48, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); List&lt;String&gt; nameList = personList.stream().map(Person::getName).collect(Collectors.toList()); System.out.println(nameList); 执行结果： [张三, 李四, 王五, 赵六, 多多]过滤找出列表中满足条件元素 找出年龄大于30岁的人 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 25, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 48, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); List&lt;Person&gt; personListResult = personList.stream().filter(person -&gt; person.getAge() &gt; 30).collect(Collectors.toList()); System.out.println(personListResult); 执行结果： [Person(name=王五, sex=女, age=36, salary=3000), Person(name=赵六, sex=女, age=48, salary=7000), Person(name=多多, sex=男, age=100, salary=9000)]去重找出所有不重复的年龄 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 36, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 17, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); personList.add(new Person(&quot;哈哈&quot;, &quot;男&quot;, 36, 4000)); List&lt;Integer&gt; ages = personList.stream().map(Person::getAge).distinct().collect(Collectors.toList()); System.out.println(ages); 执行结果： [17, 36, 100]分组根据对象中的指定名称进行分组，返回一个Map&lt;分组字段,对象集合&gt; 根据性别分组 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 25, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 48, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); Map&lt;String, List&lt;Person&gt;&gt; sexMap = personList.stream().collect(Collectors.groupingBy(Person::getSex)); System.out.println(sexMap); 执行结果： { 女=[Person(name=王五, sex=女, age=36, salary=3000), Person(name=赵六, sex=女, age=48, salary=7000)], 男=[Person(name=张三, sex=男, age=17, salary=1000), Person(name=李四, sex=男, age=25, salary=5000), Person(name=多多, sex=男, age=100, salary=9000)] }分组有序 默认分组后的map是无序的，如果要保证分组后原顺序不受影响，可参考如下代码 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 25, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 48, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); Map&lt;String, List&lt;Person&gt;&gt; sexMap = personList.stream().collect(Collectors.groupingBy(Person::getSex, LinkedHashMap::new, Collectors.toList())); System.out.println(sexMap); 执行结果： { 男=[ Person(name=张三, sex=男, age=17, salary=1000), Person(name=李四, sex=男, age=25, salary=5000), Person(name=多多, sex=男, age=100, salary=9000)], 女=[ Person(name=王五, sex=女, age=36, salary=3000), Person(name=赵六, sex=女, age=48, salary=7000)]}分组求和根据性别分组，然后求出男女的工资总和 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 36, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 17, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); personList.add(new Person(&quot;哈哈&quot;, &quot;男&quot;, 36, 4000)); Map&lt;String, Integer&gt; salarySumMap = personList.stream().collect(Collectors.groupingBy(Person::getSex, Collectors.summingInt(Person::getSalary))); System.out.println(salarySumMap); 执行结果： {女=10000, 男=19000}分组求平均值根据性别分组，求出男女平均工资 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 36, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 17, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); personList.add(new Person(&quot;哈哈&quot;, &quot;男&quot;, 36, 4000)); Map&lt;String, Double&gt; salarySumMap = personList.stream().collect( Collectors.groupingBy(Person::getSex, Collectors.averagingInt(Person::getSalary))); System.out.println(salarySumMap); 执行结果： {女=5000.0, 男=4750.0}排序顺序 根据年龄顺序排序 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 36, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 25, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 22, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); personList = personList.stream().sorted(Comparator.comparingInt(Person::getAge)).collect(Collectors.toList()); System.out.println(personList); 执行结果： [ Person(name=张三, sex=男, age=17, salary=1000), Person(name=赵六, sex=女, age=22, salary=7000), Person(name=王五, sex=女, age=25, salary=3000), Person(name=李四, sex=男, age=36, salary=5000), Person(name=多多, sex=男, age=100, salary=9000)]倒序 根据年龄倒序排序 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 36, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 25, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 22, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); personList = personList.stream().sorted(Comparator.comparingInt(Person::getAge).reversed()).collect(Collectors.toList()); System.out.println(personList); 执行结果： [ Person(name=多多, sex=男, age=100, salary=9000), Person(name=李四, sex=男, age=36, salary=5000), Person(name=王五, sex=女, age=25, salary=3000), Person(name=赵六, sex=女, age=22, salary=7000), Person(name=张三, sex=男, age=17, salary=1000)]多条件排序 根据年龄和工资进行排序 年龄相同，工资作为第二排序条件 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 36, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 17, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); personList.add(new Person(&quot;哈哈&quot;, &quot;男&quot;, 36, 4000)); personList = personList.stream().sorted( Comparator.comparingInt(Person::getAge).thenComparing(Person::getSalary) ).collect(Collectors.toList()); System.out.println(personList); 执行结果： [ Person(name=张三, sex=男, age=17, salary=1000), Person(name=赵六, sex=女, age=17, salary=7000), Person(name=王五, sex=女, age=36, salary=3000), Person(name=哈哈, sex=男, age=36, salary=4000), Person(name=李四, sex=男, age=36, salary=5000), Person(name=多多, sex=男, age=100, salary=9000)]求和所有人的工资总和 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 36, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 17, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); personList.add(new Person(&quot;哈哈&quot;, &quot;男&quot;, 36, 4000)); Integer salarySum = personList.stream().mapToInt(Person::getSalary).sum(); System.out.println(salarySum); 执行结果： 29000平均值找出36岁年龄人群的平均工资 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 36, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 17, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); personList.add(new Person(&quot;哈哈&quot;, &quot;男&quot;, 36, 4000)); Double average = personList.stream().filter(person -&gt; person.age == 36).mapToInt(Person::getSalary).average().getAsDouble(); System.out.println(average); 执行结果： 4000.0最大值找出工资最高的人 List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 36, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 17, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); personList.add(new Person(&quot;哈哈&quot;, &quot;男&quot;, 36, 4000)); Person salaryMaxPerson = personList.stream().max(Comparator.comparingInt(Person::getSalary)).get(); System.out.println(salaryMaxPerson); 执行结果： Person(name=多多, sex=男, age=100, salary=9000)最小值List&lt;Person&gt; personList = new ArrayList&lt;&gt;(); personList.add(new Person(&quot;张三&quot;, &quot;男&quot;, 17, 1000)); personList.add(new Person(&quot;李四&quot;, &quot;男&quot;, 36, 5000)); personList.add(new Person(&quot;王五&quot;, &quot;女&quot;, 36, 3000)); personList.add(new Person(&quot;赵六&quot;, &quot;女&quot;, 17, 7000)); personList.add(new Person(&quot;多多&quot;, &quot;男&quot;, 100, 9000)); personList.add(new Person(&quot;哈哈&quot;, &quot;男&quot;, 36, 4000)); Person salaryMaxPerson = personList.stream().min(Comparator.comparingInt(Person::getSalary)).get(); System.out.println(salaryMaxPerson); 执行结果： Person(name=张三, sex=男, age=17, salary=1000)","categories":[{"name":"java","slug":"java","permalink":"http://yanhui2018.gitee.io/categories/java/"}],"tags":[{"name":"java8","slug":"java8","permalink":"http://yanhui2018.gitee.io/tags/java8/"}]},{"title":"windows操作技巧","slug":"other/windows操作技巧","date":"2020-05-04T16:00:00.000Z","updated":"2020-06-11T08:54:05.938Z","comments":true,"path":"2020/05/05/other/windows操作技巧/","link":"","permalink":"http://yanhui2018.gitee.io/2020/05/05/other/windows%E6%93%8D%E4%BD%9C%E6%8A%80%E5%B7%A7/","excerpt":"","text":"[toc] Win10实用快捷键 win + shift + s 截图 win + x 左下角弹出常用功能入口 win + tab 弹出桌面及活动预览，可增加虚拟桌面 虚拟桌面，隔离的工作空间 win + ctrl + d 创建虚拟桌面 win + ctrl + f4 关闭当前虚拟桌面 win + ctrl + ← 向左切换虚拟桌面 win + ctrl + → 向右切换虚拟桌面 win + i 弹出windows设置界面 win + a 打开操作中心，显示最近通知和常用功能开关按钮 win + s 打开搜索界面 win + v 打开云剪贴板 win + ; 打开自带的表情符号 谷歌浏览器信任自定义插件当使用自己开发的插件，或者非谷歌官方的插件时，会被浏览器限制；如果我们信任该插件，可以按照如下方式进行配置 打开本地组策略编辑器，运行gpedit.msc image-20200419172021567 添加模板，下载google浏览器自定义模板文件,https://yanhui2018.coding.net/s/854fa530-ea4e-4539-bfd7-216ea0e95d39 ；添加时选择 chrome.adm文件 image-20200419171708684 添加完成后可看到chrome模板，选择配置扩展安装白名单 image-20200419171824551 打开chrome扩展程序，找到扩展id，复制 image-20200419171849867 添加扩展id到白名单，保存后当前插件就会被chrome信任了，不会再有任何风险提示信息 image-20200419171910088","categories":[{"name":"other","slug":"other","permalink":"http://yanhui2018.gitee.io/categories/other/"}],"tags":[{"name":"windows","slug":"windows","permalink":"http://yanhui2018.gitee.io/tags/windows/"}]},{"title":"Centos7运维笔记","slug":"linux/Centos7运维笔记","date":"2020-04-30T16:00:00.000Z","updated":"2020-06-11T08:54:05.937Z","comments":true,"path":"2020/05/01/linux/Centos7运维笔记/","link":"","permalink":"http://yanhui2018.gitee.io/2020/05/01/linux/Centos7%E8%BF%90%E7%BB%B4%E7%AC%94%E8%AE%B0/","excerpt":"","text":"记录腾讯云Centos7服务器运维中的软件安装过程及问题 常用开发软件的简单应用 [toc] Linux常用命令文件目录cd 目录切换 cd .. 上级目录 cd ~ 当前用户目录，与直接 cd 效果一样 cd - 上次操作目录 mkdir test 新建目录 mv test test2 重命名目录 rm -rf test2 删除目录 cp -R test2 test3 复制test2目录生成test3目录 mkdir -p d1/d2/d3 创建多级目录 touch a.txt 创建文件 mv a.txt a2.txt 重命名文件 rm -rf a2.txt 删除文件 cat a.txt 查看文件内容 ls 查看当前目录下的文件 ls [options] [file...] ls /etc 查看目录 /etc 下的所有文件 -l 以列表形式查看文件 -a 查看所有文件，包含隐藏文件 -h 查看文件，文件大小友好展示（eg...1k,1m,1g） pwd 查看当前目录 -L 逻辑路径 -P 真实路径，可显示软链接的真实路径 ln 文件链接 ln [options] source [dest] 软链接：ln -s 目标文件/目录 链接名称 硬链接：ln 目标文件 链接文件 -d 目录硬链接 find文件查找 find /etc -name &quot;*.cnf&quot; 找出/etc目录下以.cnf结尾的文件 find /etc -ctime 1 找出近1天内文件状态发生改变的文件 find /etc -mtime 1 找出近1天内文件内容发生改变的文件 find /etc -size +10k 找出大于10k的文件 find /etc -size -10k 找出小于10k的文件 find /etc -empty 找空目录或者大小为0的文件 du 显示当前目录下的文件对磁盘空间的使用情况 du [options] [file...] -h 以友好的方式显示使用磁盘大小 du -h /etc 展示/etc目录下的文件磁盘使用情况 网络hostname 显示主机名 ping www.baidu.com 向目标机器发送数据包 -c 指定发送次数 ifconfig 查看网络配置，与 ip addr 类似 nslookup www.baidu.com 查看域名对应的ip地址 traceroute www.baidu.com 查看到达指定地址经过的路由ip和时间 系统free 查看内存使用情况 -m 以M为单位显示 systemctl系统服务管理，service和chkconfig两个命令的结合 systemctl start nginx.service 启动nginx服务 systemctl enable nginx.service 开机自动启动 systemctl disable nginx.service 关闭开机自动启动 systemctl status nginx.service 查看当前服务状态 systemctl restart nginx.service 重启服务 yum 软件管理命令 yum install nginx 安装软件 yum remove nginx 卸载软件 yum update nginx 更新软件 yum list 展示所有已安装或者可以安装的程序包 yum list installed 显示已安装的软件包 yum list available 显示可用的软件包 yum list httpd 显示httpd的安装情况 yum clean package 清除缓存目录下的软件包 yum search 软件名 在仓库中搜索软件 w 显示系统当前登录用户信息 磁盘df 显示磁盘上可使用的空间 -h 友好的方式展示磁盘大小 -a 展示全部的文件系统 Linux系统文件目录说明/etc/passwd用户信息，配置文件每一行表示一个用户信息，用“:”分隔用户信息 第一列为账户名称 第二列为密码占位符（x表示该账户需要密码才能登录，为空时，账户无须密码即可登录） 第三列为账户UID 第四列为GID 第五列为账户附加基本信息，一般存储账户名全称，联系方式等信息 第六列为账户家目录位置 第七列为账户登录Shell，/bin/bash为可登录系统Shell，/sbin/nologin表示账户无法登录系统 /etc/passwd /etc/shadow用户安全信息，与/etc/passwd中的用户行一一对应，它由pwconv命令根据/etc/passwd中的数据自动产生 第一列为账户名称 第二列为密码（账户未设置密码时为!!，设置密码后加密显示） 如果格式为 &quot;$**id**$**salt**$**hashed**&quot;，则表示该用户密码正常。其中$id$的id表示密码的加密算法， $1$ 表示使用MD5算法 $2a$ 表示使用Blowfish算法 $2y$ 是另一算法长度的Blowfish, $5$ 表示SHA-256算法 $6$ 表示SHA-512算法 如下图,root用户使用的MD5算法，通过以上规则可以用 openssl 验证root密码, openssl passwd -1 &quot;root用户密码&quot; openssl passwd -1 -salt &quot;slat&quot; &quot;root用户密码&quot;，经验证，生成结果与密码列一致 第三列为上次修改密码的时间距离1970年01月01日多少天 第四列为密码最短有效天数，0表示无限制 第五列为密码最长有效天数（默认位99999天，可以理解为永不过期） 第六列为密码过期后的宽限天数（密码过期后，预留几天给账号修改密码，此时已无法使用旧密码登录） 第八列为账户失效日期（从1970年01月01日起多少天后账户失效） 第九列暂时保留未使用。 /etc/shadow 帮助文档man 自带帮助文档linux自带命令帮助文档工具 man ，输入 man ls 即可查看相关命令的帮助文档 image-20200509172351834 cman 中文帮助文档 安装：yum install man-pages-zh-CN 设置别名： alias cman=&#39;man -M /usr/share/man/zh_CN&#39; Mysql8安装下载wget -i -c https://dev.mysql.com/get/mysql80-community-release-el7-3.noarch.rpm 安装 yum -y install mysql80-community-release-el7-3.noarch.rpm yum -y install mysql-community-server 下载加速官方下载速度很慢，慢到你崩溃加怀疑人生 0 此时你可以取消下载，打开 yum 下载缓存目录 /var/cache/yum/x86_64/7/mysql80-community/packages , 切换到该目录，不出意外的话，你可以看到刚刚没有下载完成的文件 image-1589016296791.png 通过以下国内镜像站点可以找到对应的文件 http://uni.mirrors.163.com/mysql/Downloads/MySQL-8.0/ http://mirrors.ustc.edu.cn/mysql-ftp/Downloads/MySQL-8.0/ 找到对应的文件，复制下载地址 image-1589016307720.png 通过 wget 命令下载文件，然后覆盖掉原有文件即可 image-1589016311009.png 重新执行安装命令yum -y install mysql-community-server ，此时则会跳过下载，直接开始安装了。 image-1589016324992.png 运行 查看mysql服务状态：systemctl status mysqld 启动mysql服务：systemctl start mysqld 通过日志查看root密码：grep &quot;password&quot; /var/log/mysqld.log 登陆mysql， mysql -u root -p ，输入启动日志中的密码 image-1589016332459.png 重置密码 密码必须符合规则，暂且设置成带有大小写，数字，特殊字符的密码 ALTER USER &#39;root&#39;@&#39;[localhost](http://localhost)&#39; IDENTIFIED BY &#39;123456&#39;; {% image Centos7运维笔记/image-1589016335331.png 'image-1589016335331.png' '' %} 查看密码规则 SHOW VARIABLES LIKE &#39;validate_password%&#39;; image-1589016337796.png 设置简单密码，只满足长度最小为1即可 set global validate_password.policy=0; set global validate_password.length=1; ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123456&#39;; image-1589016341920.png 开启远程连接 直接给 root 用户赋远程访问权限会包语法错误，需要我们新增一个远程访问用户 CREATE USER ‘yanhui’@’%’ IDENTIFIED BY ‘926484’; GRANT ALL ON . TO ‘yanhui’@’%’; 客户端连接使用sqlyog连接时报错：plugin caching_sha2_password … image-1589016351856.png 此时需要修改默认的密码策略 ALTER USER &#39;yanhui&#39;@&#39;%&#39; IDENTIFIED WITH mysql_native_password BY &#39;123456&#39;; 修改后再次测试，连接成功！！！ image-1589016355883.png 定时任务crontab安装使用centos7上的定时任务默认采用 crond.service 服务实现 服务安装 yum install crontabs 查看服务状态 systemctl status crond.service 查看当前定时任务列表 crontab -l 编辑定时任务 crontab -e ，新增一条定时任务记录 :wq 保持即可， image-1589016367754.png cron格式* * * * * command分 时 日 月 周 命令 第1列表示分钟1～59 每分钟用 /1表示 第2列表示小时1～23（0表示0点） 第3列表示日期1～31 第4列表示月份1～12 第5列标识号星期0～6（0表示星期天） 第6列要运行的命令 - 每天凌晨2点30执行脚本push.auto.sh 30 02 * * * cd /root/gitee/tcloud &amp;&amp; ./push.auto.sh &gt; /root/gitee/tcloud/crontab.log 2&gt;&amp;1 &amp;Redis安装配置Redis Key 命令 获取数据类型： type key 删除指定的key： del key 查询指定key是否存在： exists key1 key2 ... ，返回存在的数量，不存在则返回0 获取key的过期时间： ttl key ，以秒为单位返回过期时间 获取匹配指定模式的key： keys pattern ，例如 keys * ，查看所有key；keys abc* ，查询所有以abc开头的key 从数据库中随机返回一个key： random 移除key的过期时间： persits key ，移除后key将不会过期 修改key名称： rename key_name_old key_name_new 数据类型参考文档：https://www.redis.net.cn/order/ String 字符串 设置： set key value 设置多个key-value： set key1 value1 key2 value2 ... 设置值及过期时间： setex key seconds value ，以秒为单位设置过期时间； psetex 以毫秒为单位 获取： get key 获取多个key： mget key1 key2 key3 ... 返回key的旧值，并设置新值： getset key newValue 获取字符串长度： strlen key 字符串追加： append key ，如果key存在，则追加，不存在则与 set 命令功能一样 将存储的数字+1： incr key ，如果不是数字则会报错，如果不存在则默认为0，然后+1 将存储的数字+num： incrby key num 将存储的数字-1：decr key 将存储的数字减去指定数字num： decrby key num 获取key中字符串的子串： getrange key start end List 列表 在列表头部插入元素： lpush key value1 value2 ... 在列表尾部插入元素： rpush key value1 value2 ... 获取列表指定范围内的元素： lrange key start end 获取列表长度： llen key 通过索引获取列表元素： lindex key index ，index=0获取第一个元素，index=-1获取最后一个元素 通过索引设置元素的值： lset key index value 移除列表最后一个元素： rpop key 移除列表第一个元素： lpop key 移除列表元素： lrem key count value ，根据参数 COUNT 的值，移除列表中与参数 VALUE 相等的元素 count &gt; 0 : 从表头开始向表尾搜索，移除与 value 相等的元素，数量为 count 。 count &lt; 0 : 从表尾开始向表头搜索，移除与 value 相等的元素，数量为 count 的绝对值。 count = 0 : 移除表中所有与 value 相等的值 Hash 哈希表 设置单个field-value对到哈希表中 hset key field value 同时将多个 field-value (字段-值)对设置到哈希表中： hmset key field1 value1 field2 value2 ... 获取哈希表中指定field的值： hget key field 获取哈希表中所有field的value集合： hmget key field1 field2 ... 获取哈希表中所有field， hkeys key 获取哈希表中所有value， hvals key 获取表中的所有field-value： hgetall key 判断哈希表中field是否存在： hexists key field 删除哈希表中的字段： hdel key field1 field2 ... 获取哈希表中字段数量： hlen key Set 集合 向集合中添加元素， sadd key value1 value2 ... ，value重复则会被忽略 获取集合所有元素， smembers key 移除集合元素， srem key value1 value2 ... 将集合a的元素移动到集合b中， smove set1 set2 set1_value ，将set1中的set1_value移动到set2中 Zset 有序集合与 Set 类似，不重复的集合，但是保值有序，加入元素时会设置score值，越小排序越靠前 添加元素， zadd key score value 获取指定区间的元素（从小到大排序）， zrange key start end 获取指定区间的元素（从大到小排序）， zrevrange key start end 获取在指定score区间内的成员数量， zcount key min_score max_score 移除元素， zrem key value OpenResty安装源码下载 下载地址 https://openresty.org/download/openresty-1.15.8.2.tar.gz image-1589016374751.png 安装命令 tar -xzvf openresty-VERSION.tar.gz cd openresty-VERSION/ ./configure make sudo make install 配置configure执行命令：./configure 如果有缺失模块的问题，可执行以下命令安装： yum -y install pcre-devel yum -y install openssl openssl-devel 配置完成截图 image-1589016379063.png 编译make执行命令： make 安装make install执行命令： make install 安装完成 安装目录 /usr/local/openresty 启动： /usr/local/openresty/bin/openresty 大功告成 image-1589016391082.png 执行shell命令安装 sockproc# 安装sockproc git clone https://github.com/juce/sockproc.git cd sockproc/ gcc -o sockproc ./sockproc.c # 创建Unix套接字，提供给lua的shell库连接 ./sockproc /tmp/shell.sock chmod 0666 /tmp/shell.sock 安装 lua-resty-shellgit clone https://github.com/juce/lua-resty-shell # 复制库到openresty下 cp lua-resty-shell/lib/resty/shell.lua /usr/local/openresty/lualib/resty/ 修改nginx配置文件 vi /usr/local/openresty/nginx/conf/nginx.conf ，在 server 节点下加入如下内容： location /shell_test { content_by_lua_block { local shell = require(&quot;resty.shell&quot;) local args = { socket = &quot;unix:/tmp/shell.sock&quot;, } local status, out, err = shell.execute(&quot;uname -a&quot;, args) ngx.header.content_type = &quot;text/plain&quot; ngx.say(&quot;Hello from:\\n&quot; .. out) } } 重启 openresty - /usr/local/openresty/bin/openresty -s reload 访问地址 /shell_test","categories":[{"name":"linux","slug":"linux","permalink":"http://yanhui2018.gitee.io/categories/linux/"}],"tags":[{"name":"centos7","slug":"centos7","permalink":"http://yanhui2018.gitee.io/tags/centos7/"}]}],"categories":[{"name":"java","slug":"java","permalink":"http://yanhui2018.gitee.io/categories/java/"},{"name":"other","slug":"other","permalink":"http://yanhui2018.gitee.io/categories/other/"},{"name":"linux","slug":"linux","permalink":"http://yanhui2018.gitee.io/categories/linux/"}],"tags":[{"name":"java8","slug":"java8","permalink":"http://yanhui2018.gitee.io/tags/java8/"},{"name":"files","slug":"files","permalink":"http://yanhui2018.gitee.io/tags/files/"},{"name":"lombok","slug":"lombok","permalink":"http://yanhui2018.gitee.io/tags/lombok/"},{"name":"maven","slug":"maven","permalink":"http://yanhui2018.gitee.io/tags/maven/"},{"name":"python","slug":"python","permalink":"http://yanhui2018.gitee.io/tags/python/"},{"name":"poi","slug":"poi","permalink":"http://yanhui2018.gitee.io/tags/poi/"},{"name":"office","slug":"office","permalink":"http://yanhui2018.gitee.io/tags/office/"},{"name":"excel","slug":"excel","permalink":"http://yanhui2018.gitee.io/tags/excel/"},{"name":"sonar","slug":"sonar","permalink":"http://yanhui2018.gitee.io/tags/sonar/"},{"name":"lint","slug":"lint","permalink":"http://yanhui2018.gitee.io/tags/lint/"},{"name":"windows","slug":"windows","permalink":"http://yanhui2018.gitee.io/tags/windows/"},{"name":"centos7","slug":"centos7","permalink":"http://yanhui2018.gitee.io/tags/centos7/"}]}